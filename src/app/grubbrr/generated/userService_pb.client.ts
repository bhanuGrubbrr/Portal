/* eslint-disable */
// @generated by protobuf-ts 2.9.0 with parameter ts_nocheck,eslint_disable,add_pb_suffix,long_type_string,generate_dependencies
// @generated from protobuf file "userService.proto" (package "Mgmt", syntax proto3)
// tslint:disable
// @ts-nocheck
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { UserService } from "./userService_pb";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { UserDetailsVM } from "./user_pb";
import type { EmptyRequest } from "./common_pb";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service Mgmt.UserService
 */
export interface IUserServiceClient {
    /**
     * @generated from protobuf rpc: GetMe(Mgmt.EmptyRequest) returns (Mgmt.UserDetailsVM);
     */
    getMe(input: EmptyRequest, options?: RpcOptions): UnaryCall<EmptyRequest, UserDetailsVM>;
}
/**
 * @generated from protobuf service Mgmt.UserService
 */
export class UserServiceClient implements IUserServiceClient, ServiceInfo {
    typeName = UserService.typeName;
    methods = UserService.methods;
    options = UserService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: GetMe(Mgmt.EmptyRequest) returns (Mgmt.UserDetailsVM);
     */
    getMe(input: EmptyRequest, options?: RpcOptions): UnaryCall<EmptyRequest, UserDetailsVM> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<EmptyRequest, UserDetailsVM>("unary", this._transport, method, opt, input);
    }
}
