/* eslint-disable */
// @generated by protobuf-ts 2.9.0 with parameter ts_nocheck,eslint_disable,add_pb_suffix,long_type_string,generate_dependencies
// @generated from protobuf file "reportsService.proto" (package "Report", syntax proto3)
// tslint:disable
// @ts-nocheck
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { ReportsService } from "./reportsService_pb";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { KPIDashboardReportVM } from "./reports_pb";
import type { KPIReportRequest } from "./reportsService_pb";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service Report.ReportsService
 */
export interface IReportsServiceClient {
    /**
     * @generated from protobuf rpc: GetKPIReport(Report.KPIReportRequest) returns (Report.KPIDashboardReportVM);
     */
    getKPIReport(input: KPIReportRequest, options?: RpcOptions): UnaryCall<KPIReportRequest, KPIDashboardReportVM>;
}
/**
 * @generated from protobuf service Report.ReportsService
 */
export class ReportsServiceClient implements IReportsServiceClient, ServiceInfo {
    typeName = ReportsService.typeName;
    methods = ReportsService.methods;
    options = ReportsService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: GetKPIReport(Report.KPIReportRequest) returns (Report.KPIDashboardReportVM);
     */
    getKPIReport(input: KPIReportRequest, options?: RpcOptions): UnaryCall<KPIReportRequest, KPIDashboardReportVM> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<KPIReportRequest, KPIDashboardReportVM>("unary", this._transport, method, opt, input);
    }
}
