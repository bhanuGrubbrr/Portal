/* eslint-disable */
// @generated by protobuf-ts 2.9.0 with parameter ts_nocheck,eslint_disable,add_pb_suffix,long_type_string,generate_dependencies
// @generated from protobuf file "orderProgressBoardService.proto" (package "Mgmt", syntax proto3)
// tslint:disable
// @ts-nocheck
import { EmptyResponse } from "./common_pb";
import { DeviceLocationResponse } from "./common_pb";
import { DeviceLocationRequest } from "./common_pb";
import { OrderProgressBoardsVM } from "./orderProgressBoard_pb";
import { LocationRequest } from "./common_pb";
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { OrderProgressBoardVM } from "./orderProgressBoard_pb";
/**
 * @generated from protobuf message Mgmt.UpdateOrderProgressBoardDeviceRequest
 */
export interface UpdateOrderProgressBoardDeviceRequest {
    /**
     * @generated from protobuf field: string locationId = 1;
     */
    locationId: string;
    /**
     * @generated from protobuf field: Mgmt.OrderProgressBoardVM device = 2;
     */
    device?: OrderProgressBoardVM;
}
/**
 * @generated from protobuf message Mgmt.AddOrderProgressBoardRequest
 */
export interface AddOrderProgressBoardRequest {
    /**
     * @generated from protobuf field: string locationId = 1;
     */
    locationId: string;
    /**
     * @generated from protobuf field: string name = 2;
     */
    name: string;
}
/**
 * @generated from protobuf message Mgmt.OrderProgressBoardLinkResponse
 */
export interface OrderProgressBoardLinkResponse {
    /**
     * @generated from protobuf field: string code = 1;
     */
    code: string;
}
// @generated message type with reflection information, may provide speed optimized methods
class UpdateOrderProgressBoardDeviceRequest$Type extends MessageType<UpdateOrderProgressBoardDeviceRequest> {
    constructor() {
        super("Mgmt.UpdateOrderProgressBoardDeviceRequest", [
            { no: 1, name: "locationId", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "device", kind: "message", T: () => OrderProgressBoardVM }
        ]);
    }
    create(value?: PartialMessage<UpdateOrderProgressBoardDeviceRequest>): UpdateOrderProgressBoardDeviceRequest {
        const message = { locationId: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<UpdateOrderProgressBoardDeviceRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: UpdateOrderProgressBoardDeviceRequest): UpdateOrderProgressBoardDeviceRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string locationId */ 1:
                    message.locationId = reader.string();
                    break;
                case /* Mgmt.OrderProgressBoardVM device */ 2:
                    message.device = OrderProgressBoardVM.internalBinaryRead(reader, reader.uint32(), options, message.device);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: UpdateOrderProgressBoardDeviceRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string locationId = 1; */
        if (message.locationId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.locationId);
        /* Mgmt.OrderProgressBoardVM device = 2; */
        if (message.device)
            OrderProgressBoardVM.internalBinaryWrite(message.device, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message Mgmt.UpdateOrderProgressBoardDeviceRequest
 */
export const UpdateOrderProgressBoardDeviceRequest = new UpdateOrderProgressBoardDeviceRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AddOrderProgressBoardRequest$Type extends MessageType<AddOrderProgressBoardRequest> {
    constructor() {
        super("Mgmt.AddOrderProgressBoardRequest", [
            { no: 1, name: "locationId", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<AddOrderProgressBoardRequest>): AddOrderProgressBoardRequest {
        const message = { locationId: "", name: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AddOrderProgressBoardRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AddOrderProgressBoardRequest): AddOrderProgressBoardRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string locationId */ 1:
                    message.locationId = reader.string();
                    break;
                case /* string name */ 2:
                    message.name = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: AddOrderProgressBoardRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string locationId = 1; */
        if (message.locationId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.locationId);
        /* string name = 2; */
        if (message.name !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.name);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message Mgmt.AddOrderProgressBoardRequest
 */
export const AddOrderProgressBoardRequest = new AddOrderProgressBoardRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class OrderProgressBoardLinkResponse$Type extends MessageType<OrderProgressBoardLinkResponse> {
    constructor() {
        super("Mgmt.OrderProgressBoardLinkResponse", [
            { no: 1, name: "code", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<OrderProgressBoardLinkResponse>): OrderProgressBoardLinkResponse {
        const message = { code: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<OrderProgressBoardLinkResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: OrderProgressBoardLinkResponse): OrderProgressBoardLinkResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string code */ 1:
                    message.code = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: OrderProgressBoardLinkResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string code = 1; */
        if (message.code !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.code);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message Mgmt.OrderProgressBoardLinkResponse
 */
export const OrderProgressBoardLinkResponse = new OrderProgressBoardLinkResponse$Type();
/**
 * @generated ServiceType for protobuf service Mgmt.OrderProgressBoardService
 */
export const OrderProgressBoardService = new ServiceType("Mgmt.OrderProgressBoardService", [
    { name: "GetOrderProgressBoards", options: {}, I: LocationRequest, O: OrderProgressBoardsVM },
    { name: "GetOrderProgressBoardOTP", options: {}, I: DeviceLocationRequest, O: DeviceLocationResponse },
    { name: "AddOrderProgressBoard", options: {}, I: AddOrderProgressBoardRequest, O: OrderProgressBoardVM },
    { name: "UnlinkOrderProgressBoard", options: {}, I: DeviceLocationRequest, O: EmptyResponse },
    { name: "UpdateOrderProgressBoard", options: {}, I: UpdateOrderProgressBoardDeviceRequest, O: OrderProgressBoardVM },
    { name: "RemoveOrderProgressBoard", options: {}, I: DeviceLocationRequest, O: EmptyResponse }
]);
