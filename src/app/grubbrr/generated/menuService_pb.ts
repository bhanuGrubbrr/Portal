/* eslint-disable */
// @generated by protobuf-ts 2.9.0 with parameter ts_nocheck,eslint_disable,add_pb_suffix,long_type_string,generate_dependencies
// @generated from protobuf file "menuService.proto" (package "Mgmt", syntax proto3)
// tslint:disable
// @ts-nocheck
import { PosVaultResponse } from "./menu_pb";
import { UpdateMenuLayoutRequest } from "./menu_pb";
import { MenuLayoutResponse } from "./menu_pb";
import { MenuLayoutRequest } from "./menu_pb";
import { MenuLayoutsResponse } from "./menu_pb";
import { MessageGuardResponse } from "./menu_pb";
import { EmptyResponse } from "./common_pb";
import { Item86Request } from "./menu_pb";
import { Item86Response } from "./menu_pb";
import { MenuResponse } from "./menu_pb";
import { LocationRequest } from "./common_pb";
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { IntOverride } from "./common_pb";
import { StringListOverride } from "./common_pb";
import { StringOverride } from "./common_pb";
import { BoolOverride } from "./common_pb";
import { OverrideAction } from "./common_pb";
import { MenuItemDisplayFlow } from "./menu_pb";
import { MessageGuardVM } from "./menu_pb";
/**
 * @generated from protobuf message Mgmt.BulkUpdateModifiersAndMenuItemOverrideRequest
 */
export interface BulkUpdateModifiersAndMenuItemOverrideRequest {
    /**
     * @generated from protobuf field: repeated Mgmt.ModifierWithMenuItemOverrideRequest modifierWithMenuItemOverrideRequest = 2;
     */
    modifierWithMenuItemOverrideRequest: ModifierWithMenuItemOverrideRequest[];
}
/**
 * @generated from protobuf message Mgmt.ModifierWithMenuItemOverrideRequest
 */
export interface ModifierWithMenuItemOverrideRequest {
    /**
     * @generated from protobuf field: Mgmt.ModifierOverrideRequest modifierOverrideRequest = 1;
     */
    modifierOverrideRequest?: ModifierOverrideRequest;
    /**
     * @generated from protobuf field: Mgmt.ModifierMenuItemOverrideRequest modifierMenuItemOverrideRequest = 2;
     */
    modifierMenuItemOverrideRequest?: ModifierMenuItemOverrideRequest;
}
/**
 * @generated from protobuf message Mgmt.CreateEntityResponse
 */
export interface CreateEntityResponse {
    /**
     * @generated from protobuf field: string id = 1;
     */
    id: string;
}
/**
 * @generated from protobuf message Mgmt.RemoveMessageGuardRequest
 */
export interface RemoveMessageGuardRequest {
    /**
     * @generated from protobuf field: string id = 1;
     */
    id: string;
    /**
     * @generated from protobuf field: string locationId = 2;
     */
    locationId: string;
}
/**
 * @generated from protobuf message Mgmt.MessageGuardRequest
 */
export interface MessageGuardRequest {
    /**
     * @generated from protobuf field: Mgmt.MessageGuardVM message_guard = 1;
     */
    messageGuard?: MessageGuardVM;
    /**
     * @generated from protobuf field: string locationId = 2;
     */
    locationId: string;
}
/**
 * @generated from protobuf message Mgmt.ModifierGroupRequest
 */
export interface ModifierGroupRequest {
    /**
     * @generated from protobuf field: string locationId = 1;
     */
    locationId: string;
    /**
     * @generated from protobuf field: string modifierGroupId = 2;
     */
    modifierGroupId: string;
}
/**
 * @generated from protobuf message Mgmt.CategoryRequest
 */
export interface CategoryRequest {
    /**
     * @generated from protobuf field: string locationId = 1;
     */
    locationId: string;
    /**
     * @generated from protobuf field: string categoryId = 2;
     */
    categoryId: string;
}
/**
 * @generated from protobuf message Mgmt.DisplayFlowOverride
 */
export interface DisplayFlowOverride {
    /**
     * @generated from protobuf field: Mgmt.MenuItemDisplayFlow value = 1;
     */
    value: MenuItemDisplayFlow;
    /**
     * @generated from protobuf field: Mgmt.OverrideAction action = 2;
     */
    action: OverrideAction;
}
/**
 * @generated from protobuf message Mgmt.CategoryStatusOverrideBulkRequest
 */
export interface CategoryStatusOverrideBulkRequest {
    /**
     * @generated from protobuf field: string locationId = 1;
     */
    locationId: string;
    /**
     * @generated from protobuf field: repeated Mgmt.CategoryStatusOverrideVM categoryStatusOverrides = 2;
     */
    categoryStatusOverrides: CategoryStatusOverrideVM[];
}
/**
 * @generated from protobuf message Mgmt.CategoryStatusOverrideVM
 */
export interface CategoryStatusOverrideVM {
    /**
     * @generated from protobuf field: string categoryId = 1;
     */
    categoryId: string;
    /**
     * @generated from protobuf oneof: isActive
     */
    isActive: {
        oneofKind: "isActiveOverride";
        /**
         * @generated from protobuf field: Mgmt.BoolOverride isActiveOverride = 2;
         */
        isActiveOverride: BoolOverride;
    } | {
        oneofKind: undefined;
    };
}
/**
 * @generated from protobuf message Mgmt.CategoryOverrideRequest
 */
export interface CategoryOverrideRequest {
    /**
     * @generated from protobuf field: string locationId = 1;
     */
    locationId: string;
    /**
     * @generated from protobuf field: string categoryId = 2;
     */
    categoryId: string;
    /**
     * @generated from protobuf oneof: name
     */
    name: {
        oneofKind: "nameOverride";
        /**
         * @generated from protobuf field: Mgmt.StringOverride nameOverride = 3;
         */
        nameOverride: StringOverride;
    } | {
        oneofKind: undefined;
    };
    /**
     * @generated from protobuf oneof: imagePath
     */
    imagePath: {
        oneofKind: "imagePathOverride";
        /**
         * @generated from protobuf field: Mgmt.StringOverride imagePathOverride = 4;
         */
        imagePathOverride: StringOverride;
    } | {
        oneofKind: undefined;
    };
    /**
     * @generated from protobuf oneof: menuItemIds
     */
    menuItemIds: {
        oneofKind: "menuItemIdsOverride";
        /**
         * @generated from protobuf field: Mgmt.StringListOverride menuItemIdsOverride = 5;
         */
        menuItemIdsOverride: StringListOverride;
    } | {
        oneofKind: undefined;
    };
    /**
     * @generated from protobuf oneof: isActive
     */
    isActive: {
        oneofKind: "isActiveOverride";
        /**
         * @generated from protobuf field: Mgmt.BoolOverride isActiveOverride = 6;
         */
        isActiveOverride: BoolOverride;
    } | {
        oneofKind: undefined;
    };
}
/**
 * @generated from protobuf message Mgmt.ModifierMenuItemOverrideRequest
 */
export interface ModifierMenuItemOverrideRequest {
    /**
     * @generated from protobuf field: string locationId = 1;
     */
    locationId: string;
    /**
     * @generated from protobuf field: string menuItemId = 2;
     */
    menuItemId: string;
    /**
     * @generated from protobuf oneof: name
     */
    name: {
        oneofKind: "nameOverride";
        /**
         * @generated from protobuf field: Mgmt.StringOverride nameOverride = 3;
         */
        nameOverride: StringOverride;
    } | {
        oneofKind: undefined;
    };
    /**
     * @generated from protobuf oneof: displayFlow
     */
    displayFlow: {
        oneofKind: "displayFlowOverride";
        /**
         * @generated from protobuf field: Mgmt.DisplayFlowOverride displayFlowOverride = 15;
         */
        displayFlowOverride: DisplayFlowOverride;
    } | {
        oneofKind: undefined;
    };
    /**
     * @generated from protobuf oneof: imagePath
     */
    imagePath: {
        oneofKind: "imagePathOverride";
        /**
         * @generated from protobuf field: Mgmt.StringOverride imagePathOverride = 4;
         */
        imagePathOverride: StringOverride;
    } | {
        oneofKind: undefined;
    };
    /**
     * @generated from protobuf oneof: description
     */
    description: {
        oneofKind: "descriptionOverride";
        /**
         * @generated from protobuf field: Mgmt.StringOverride descriptionOverride = 5;
         */
        descriptionOverride: StringOverride;
    } | {
        oneofKind: undefined;
    };
    /**
     * @generated from protobuf oneof: modifierGroupIds
     */
    modifierGroupIds: {
        oneofKind: "modifierGroupIdsOverride";
        /**
         * @generated from protobuf field: Mgmt.StringListOverride modifierGroupIdsOverride = 6;
         */
        modifierGroupIdsOverride: StringListOverride;
    } | {
        oneofKind: undefined;
    };
    /**
     * @generated from protobuf oneof: isActive
     */
    isActive: {
        oneofKind: "isActiveOverride";
        /**
         * @generated from protobuf field: Mgmt.BoolOverride isActiveOverride = 7;
         */
        isActiveOverride: BoolOverride;
    } | {
        oneofKind: undefined;
    };
}
/**
 * @generated from protobuf message Mgmt.MenuItemStatusOverrideBulkRequest
 */
export interface MenuItemStatusOverrideBulkRequest {
    /**
     * @generated from protobuf field: string locationId = 1;
     */
    locationId: string;
    /**
     * @generated from protobuf field: repeated Mgmt.MenuItemStatusOverrideVM menuItemStatusOverrides = 2;
     */
    menuItemStatusOverrides: MenuItemStatusOverrideVM[];
}
/**
 * @generated from protobuf message Mgmt.MenuItemStatusOverrideVM
 */
export interface MenuItemStatusOverrideVM {
    /**
     * @generated from protobuf field: string menuItemId = 1;
     */
    menuItemId: string;
    /**
     * @generated from protobuf oneof: isActive
     */
    isActive: {
        oneofKind: "isActiveOverride";
        /**
         * @generated from protobuf field: Mgmt.BoolOverride isActiveOverride = 2;
         */
        isActiveOverride: BoolOverride;
    } | {
        oneofKind: undefined;
    };
}
/**
 * @generated from protobuf message Mgmt.MenuItemOverrideRequest
 */
export interface MenuItemOverrideRequest {
    /**
     * @generated from protobuf field: string locationId = 1;
     */
    locationId: string;
    /**
     * @generated from protobuf field: string menuItemId = 2;
     */
    menuItemId: string;
    /**
     * @generated from protobuf oneof: name
     */
    name: {
        oneofKind: "nameOverride";
        /**
         * @generated from protobuf field: Mgmt.StringOverride nameOverride = 3;
         */
        nameOverride: StringOverride;
    } | {
        oneofKind: undefined;
    };
    /**
     * @generated from protobuf oneof: displayFlow
     */
    displayFlow: {
        oneofKind: "displayFlowOverride";
        /**
         * @generated from protobuf field: Mgmt.DisplayFlowOverride displayFlowOverride = 15;
         */
        displayFlowOverride: DisplayFlowOverride;
    } | {
        oneofKind: undefined;
    };
    /**
     * @generated from protobuf oneof: imagePath
     */
    imagePath: {
        oneofKind: "imagePathOverride";
        /**
         * @generated from protobuf field: Mgmt.StringOverride imagePathOverride = 4;
         */
        imagePathOverride: StringOverride;
    } | {
        oneofKind: undefined;
    };
    /**
     * @generated from protobuf oneof: description
     */
    description: {
        oneofKind: "descriptionOverride";
        /**
         * @generated from protobuf field: Mgmt.StringOverride descriptionOverride = 5;
         */
        descriptionOverride: StringOverride;
    } | {
        oneofKind: undefined;
    };
    /**
     * @generated from protobuf oneof: modifierGroupIds
     */
    modifierGroupIds: {
        oneofKind: "modifierGroupIdsOverride";
        /**
         * @generated from protobuf field: Mgmt.StringListOverride modifierGroupIdsOverride = 6;
         */
        modifierGroupIdsOverride: StringListOverride;
    } | {
        oneofKind: undefined;
    };
    /**
     * @generated from protobuf oneof: isActive
     */
    isActive: {
        oneofKind: "isActiveOverride";
        /**
         * @generated from protobuf field: Mgmt.BoolOverride isActiveOverride = 7;
         */
        isActiveOverride: BoolOverride;
    } | {
        oneofKind: undefined;
    };
    /**
     * @generated from protobuf oneof: calorieText
     */
    calorieText: {
        oneofKind: "calorieTextOverride";
        /**
         * @generated from protobuf field: Mgmt.StringOverride calorieTextOverride = 8;
         */
        calorieTextOverride: StringOverride;
    } | {
        oneofKind: undefined;
    };
    /**
     * @generated from protobuf oneof: selectedImagePath
     */
    selectedImagePath: {
        oneofKind: "selectedImagePathOverride";
        /**
         * @generated from protobuf field: Mgmt.StringOverride selectedImagePathOverride = 9;
         */
        selectedImagePathOverride: StringOverride;
    } | {
        oneofKind: undefined;
    };
    /**
     * @generated from protobuf oneof: selectedDisplayName
     */
    selectedDisplayName: {
        oneofKind: "selectedDisplayNameOverride";
        /**
         * @generated from protobuf field: Mgmt.StringOverride selectedDisplayNameOverride = 10;
         */
        selectedDisplayNameOverride: StringOverride;
    } | {
        oneofKind: undefined;
    };
}
/**
 * @generated from protobuf message Mgmt.ModifierGroupStatusOverrideBulkRequest
 */
export interface ModifierGroupStatusOverrideBulkRequest {
    /**
     * @generated from protobuf field: string locationId = 1;
     */
    locationId: string;
    /**
     * @generated from protobuf field: repeated Mgmt.ModiferGroupStatusOverrideVM modiferGroupOverrides = 2;
     */
    modiferGroupOverrides: ModiferGroupStatusOverrideVM[];
}
/**
 * @generated from protobuf message Mgmt.ModiferGroupStatusOverrideVM
 */
export interface ModiferGroupStatusOverrideVM {
    /**
     * @generated from protobuf field: string modifierGroupId = 1;
     */
    modifierGroupId: string;
    /**
     * @generated from protobuf oneof: isActive
     */
    isActive: {
        oneofKind: "isActiveOverride";
        /**
         * @generated from protobuf field: Mgmt.BoolOverride isActiveOverride = 2;
         */
        isActiveOverride: BoolOverride;
    } | {
        oneofKind: undefined;
    };
}
/**
 * @generated from protobuf message Mgmt.ModifierGroupOverrideRequest
 */
export interface ModifierGroupOverrideRequest {
    /**
     * @generated from protobuf field: string locationId = 1;
     */
    locationId: string;
    /**
     * @generated from protobuf field: string modifierGroupId = 2;
     */
    modifierGroupId: string;
    /**
     * @generated from protobuf oneof: name
     */
    name: {
        oneofKind: "nameOverride";
        /**
         * @generated from protobuf field: Mgmt.StringOverride nameOverride = 3;
         */
        nameOverride: StringOverride;
    } | {
        oneofKind: undefined;
    };
    /**
     * @generated from protobuf oneof: displayName
     */
    displayName: {
        oneofKind: "displayNameOverride";
        /**
         * @generated from protobuf field: Mgmt.StringOverride displayNameOverride = 16;
         */
        displayNameOverride: StringOverride;
    } | {
        oneofKind: undefined;
    };
    /**
     * @generated from protobuf oneof: selectMin
     */
    selectMin: {
        oneofKind: "selectMinOverride";
        /**
         * @generated from protobuf field: Mgmt.IntOverride selectMinOverride = 4;
         */
        selectMinOverride: IntOverride;
    } | {
        oneofKind: undefined;
    };
    /**
     * @generated from protobuf oneof: selectMax
     */
    selectMax: {
        oneofKind: "selectMaxOverride";
        /**
         * @generated from protobuf field: Mgmt.IntOverride selectMaxOverride = 5;
         */
        selectMaxOverride: IntOverride;
    } | {
        oneofKind: undefined;
    };
    /**
     * @generated from protobuf oneof: isActive
     */
    isActive: {
        oneofKind: "isActiveOverride";
        /**
         * @generated from protobuf field: Mgmt.BoolOverride isActiveOverride = 7;
         */
        isActiveOverride: BoolOverride;
    } | {
        oneofKind: undefined;
    };
    /**
     * @generated from protobuf oneof: displayFlow
     */
    displayFlow: {
        oneofKind: "displayFlowOverride";
        /**
         * @generated from protobuf field: Mgmt.StringOverride displayFlowOverride = 15;
         */
        displayFlowOverride: StringOverride;
    } | {
        oneofKind: undefined;
    };
    /**
     * @generated from protobuf oneof: modifiers
     */
    modifiers: {
        oneofKind: "modifiersOverride";
        /**
         * @generated from protobuf field: Mgmt.ModifierGroupModifiersOverride modifiersOverride = 17;
         */
        modifiersOverride: ModifierGroupModifiersOverride;
    } | {
        oneofKind: undefined;
    };
}
/**
 * @generated from protobuf message Mgmt.ModifierGroupModifiersOverride
 */
export interface ModifierGroupModifiersOverride {
    /**
     * @generated from protobuf field: repeated Mgmt.ModifierGroupModifierOverride value = 1;
     */
    value: ModifierGroupModifierOverride[];
    /**
     * @generated from protobuf field: Mgmt.OverrideAction action = 2;
     */
    action: OverrideAction;
}
/**
 * @generated from protobuf message Mgmt.ModifierGroupModifierOverride
 */
export interface ModifierGroupModifierOverride {
    /**
     * @generated from protobuf field: string menuItemId = 2;
     */
    menuItemId: string;
    /**
     * @generated from protobuf field: Mgmt.ModifierFields fields = 3;
     */
    fields?: ModifierFields;
}
/**
 * @generated from protobuf message Mgmt.ModifierFields
 */
export interface ModifierFields {
    /**
     * @generated from protobuf oneof: isDefault
     */
    isDefault: {
        oneofKind: "isDefaultOverride";
        /**
         * @generated from protobuf field: Mgmt.BoolOverride isDefaultOverride = 3;
         */
        isDefaultOverride: BoolOverride;
    } | {
        oneofKind: undefined;
    };
    /**
     * @generated from protobuf oneof: maxQuantity
     */
    maxQuantity: {
        oneofKind: "maxQuantityOverride";
        /**
         * @generated from protobuf field: Mgmt.IntOverride maxQuantityOverride = 4;
         */
        maxQuantityOverride: IntOverride;
    } | {
        oneofKind: undefined;
    };
    /**
     * @generated from protobuf oneof: isInvisible
     */
    isInvisible: {
        oneofKind: "isInvisibleOverride";
        /**
         * @generated from protobuf field: Mgmt.BoolOverride isInvisibleOverride = 5;
         */
        isInvisibleOverride: BoolOverride;
    } | {
        oneofKind: undefined;
    };
}
/**
 * @generated from protobuf message Mgmt.ModifierOverrideRequest
 */
export interface ModifierOverrideRequest {
    /**
     * @generated from protobuf field: string locationId = 1;
     */
    locationId: string;
    /**
     * @generated from protobuf field: string modifierId = 2;
     */
    modifierId: string;
    /**
     * @generated from protobuf field: Mgmt.ModifierFields fields = 3;
     */
    fields?: ModifierFields;
}
// @generated message type with reflection information, may provide speed optimized methods
class BulkUpdateModifiersAndMenuItemOverrideRequest$Type extends MessageType<BulkUpdateModifiersAndMenuItemOverrideRequest> {
    constructor() {
        super("Mgmt.BulkUpdateModifiersAndMenuItemOverrideRequest", [
            { no: 2, name: "modifierWithMenuItemOverrideRequest", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ModifierWithMenuItemOverrideRequest }
        ]);
    }
    create(value?: PartialMessage<BulkUpdateModifiersAndMenuItemOverrideRequest>): BulkUpdateModifiersAndMenuItemOverrideRequest {
        const message = { modifierWithMenuItemOverrideRequest: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<BulkUpdateModifiersAndMenuItemOverrideRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: BulkUpdateModifiersAndMenuItemOverrideRequest): BulkUpdateModifiersAndMenuItemOverrideRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated Mgmt.ModifierWithMenuItemOverrideRequest modifierWithMenuItemOverrideRequest */ 2:
                    message.modifierWithMenuItemOverrideRequest.push(ModifierWithMenuItemOverrideRequest.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: BulkUpdateModifiersAndMenuItemOverrideRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated Mgmt.ModifierWithMenuItemOverrideRequest modifierWithMenuItemOverrideRequest = 2; */
        for (let i = 0; i < message.modifierWithMenuItemOverrideRequest.length; i++)
            ModifierWithMenuItemOverrideRequest.internalBinaryWrite(message.modifierWithMenuItemOverrideRequest[i], writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message Mgmt.BulkUpdateModifiersAndMenuItemOverrideRequest
 */
export const BulkUpdateModifiersAndMenuItemOverrideRequest = new BulkUpdateModifiersAndMenuItemOverrideRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ModifierWithMenuItemOverrideRequest$Type extends MessageType<ModifierWithMenuItemOverrideRequest> {
    constructor() {
        super("Mgmt.ModifierWithMenuItemOverrideRequest", [
            { no: 1, name: "modifierOverrideRequest", kind: "message", T: () => ModifierOverrideRequest },
            { no: 2, name: "modifierMenuItemOverrideRequest", kind: "message", T: () => ModifierMenuItemOverrideRequest }
        ]);
    }
    create(value?: PartialMessage<ModifierWithMenuItemOverrideRequest>): ModifierWithMenuItemOverrideRequest {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ModifierWithMenuItemOverrideRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ModifierWithMenuItemOverrideRequest): ModifierWithMenuItemOverrideRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* Mgmt.ModifierOverrideRequest modifierOverrideRequest */ 1:
                    message.modifierOverrideRequest = ModifierOverrideRequest.internalBinaryRead(reader, reader.uint32(), options, message.modifierOverrideRequest);
                    break;
                case /* Mgmt.ModifierMenuItemOverrideRequest modifierMenuItemOverrideRequest */ 2:
                    message.modifierMenuItemOverrideRequest = ModifierMenuItemOverrideRequest.internalBinaryRead(reader, reader.uint32(), options, message.modifierMenuItemOverrideRequest);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ModifierWithMenuItemOverrideRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* Mgmt.ModifierOverrideRequest modifierOverrideRequest = 1; */
        if (message.modifierOverrideRequest)
            ModifierOverrideRequest.internalBinaryWrite(message.modifierOverrideRequest, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* Mgmt.ModifierMenuItemOverrideRequest modifierMenuItemOverrideRequest = 2; */
        if (message.modifierMenuItemOverrideRequest)
            ModifierMenuItemOverrideRequest.internalBinaryWrite(message.modifierMenuItemOverrideRequest, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message Mgmt.ModifierWithMenuItemOverrideRequest
 */
export const ModifierWithMenuItemOverrideRequest = new ModifierWithMenuItemOverrideRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CreateEntityResponse$Type extends MessageType<CreateEntityResponse> {
    constructor() {
        super("Mgmt.CreateEntityResponse", [
            { no: 1, name: "id", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<CreateEntityResponse>): CreateEntityResponse {
        const message = { id: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<CreateEntityResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: CreateEntityResponse): CreateEntityResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string id */ 1:
                    message.id = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: CreateEntityResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string id = 1; */
        if (message.id !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.id);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message Mgmt.CreateEntityResponse
 */
export const CreateEntityResponse = new CreateEntityResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RemoveMessageGuardRequest$Type extends MessageType<RemoveMessageGuardRequest> {
    constructor() {
        super("Mgmt.RemoveMessageGuardRequest", [
            { no: 1, name: "id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "locationId", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<RemoveMessageGuardRequest>): RemoveMessageGuardRequest {
        const message = { id: "", locationId: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<RemoveMessageGuardRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: RemoveMessageGuardRequest): RemoveMessageGuardRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string id */ 1:
                    message.id = reader.string();
                    break;
                case /* string locationId */ 2:
                    message.locationId = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: RemoveMessageGuardRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string id = 1; */
        if (message.id !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.id);
        /* string locationId = 2; */
        if (message.locationId !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.locationId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message Mgmt.RemoveMessageGuardRequest
 */
export const RemoveMessageGuardRequest = new RemoveMessageGuardRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MessageGuardRequest$Type extends MessageType<MessageGuardRequest> {
    constructor() {
        super("Mgmt.MessageGuardRequest", [
            { no: 1, name: "message_guard", kind: "message", T: () => MessageGuardVM },
            { no: 2, name: "locationId", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<MessageGuardRequest>): MessageGuardRequest {
        const message = { locationId: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<MessageGuardRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MessageGuardRequest): MessageGuardRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* Mgmt.MessageGuardVM message_guard */ 1:
                    message.messageGuard = MessageGuardVM.internalBinaryRead(reader, reader.uint32(), options, message.messageGuard);
                    break;
                case /* string locationId */ 2:
                    message.locationId = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: MessageGuardRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* Mgmt.MessageGuardVM message_guard = 1; */
        if (message.messageGuard)
            MessageGuardVM.internalBinaryWrite(message.messageGuard, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* string locationId = 2; */
        if (message.locationId !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.locationId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message Mgmt.MessageGuardRequest
 */
export const MessageGuardRequest = new MessageGuardRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ModifierGroupRequest$Type extends MessageType<ModifierGroupRequest> {
    constructor() {
        super("Mgmt.ModifierGroupRequest", [
            { no: 1, name: "locationId", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "modifierGroupId", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<ModifierGroupRequest>): ModifierGroupRequest {
        const message = { locationId: "", modifierGroupId: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ModifierGroupRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ModifierGroupRequest): ModifierGroupRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string locationId */ 1:
                    message.locationId = reader.string();
                    break;
                case /* string modifierGroupId */ 2:
                    message.modifierGroupId = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ModifierGroupRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string locationId = 1; */
        if (message.locationId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.locationId);
        /* string modifierGroupId = 2; */
        if (message.modifierGroupId !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.modifierGroupId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message Mgmt.ModifierGroupRequest
 */
export const ModifierGroupRequest = new ModifierGroupRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CategoryRequest$Type extends MessageType<CategoryRequest> {
    constructor() {
        super("Mgmt.CategoryRequest", [
            { no: 1, name: "locationId", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "categoryId", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<CategoryRequest>): CategoryRequest {
        const message = { locationId: "", categoryId: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<CategoryRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: CategoryRequest): CategoryRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string locationId */ 1:
                    message.locationId = reader.string();
                    break;
                case /* string categoryId */ 2:
                    message.categoryId = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: CategoryRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string locationId = 1; */
        if (message.locationId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.locationId);
        /* string categoryId = 2; */
        if (message.categoryId !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.categoryId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message Mgmt.CategoryRequest
 */
export const CategoryRequest = new CategoryRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DisplayFlowOverride$Type extends MessageType<DisplayFlowOverride> {
    constructor() {
        super("Mgmt.DisplayFlowOverride", [
            { no: 1, name: "value", kind: "enum", T: () => ["Mgmt.MenuItemDisplayFlow", MenuItemDisplayFlow] },
            { no: 2, name: "action", kind: "enum", T: () => ["Mgmt.OverrideAction", OverrideAction] }
        ]);
    }
    create(value?: PartialMessage<DisplayFlowOverride>): DisplayFlowOverride {
        const message = { value: 0, action: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<DisplayFlowOverride>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: DisplayFlowOverride): DisplayFlowOverride {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* Mgmt.MenuItemDisplayFlow value */ 1:
                    message.value = reader.int32();
                    break;
                case /* Mgmt.OverrideAction action */ 2:
                    message.action = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: DisplayFlowOverride, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* Mgmt.MenuItemDisplayFlow value = 1; */
        if (message.value !== 0)
            writer.tag(1, WireType.Varint).int32(message.value);
        /* Mgmt.OverrideAction action = 2; */
        if (message.action !== 0)
            writer.tag(2, WireType.Varint).int32(message.action);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message Mgmt.DisplayFlowOverride
 */
export const DisplayFlowOverride = new DisplayFlowOverride$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CategoryStatusOverrideBulkRequest$Type extends MessageType<CategoryStatusOverrideBulkRequest> {
    constructor() {
        super("Mgmt.CategoryStatusOverrideBulkRequest", [
            { no: 1, name: "locationId", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "categoryStatusOverrides", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => CategoryStatusOverrideVM }
        ]);
    }
    create(value?: PartialMessage<CategoryStatusOverrideBulkRequest>): CategoryStatusOverrideBulkRequest {
        const message = { locationId: "", categoryStatusOverrides: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<CategoryStatusOverrideBulkRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: CategoryStatusOverrideBulkRequest): CategoryStatusOverrideBulkRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string locationId */ 1:
                    message.locationId = reader.string();
                    break;
                case /* repeated Mgmt.CategoryStatusOverrideVM categoryStatusOverrides */ 2:
                    message.categoryStatusOverrides.push(CategoryStatusOverrideVM.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: CategoryStatusOverrideBulkRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string locationId = 1; */
        if (message.locationId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.locationId);
        /* repeated Mgmt.CategoryStatusOverrideVM categoryStatusOverrides = 2; */
        for (let i = 0; i < message.categoryStatusOverrides.length; i++)
            CategoryStatusOverrideVM.internalBinaryWrite(message.categoryStatusOverrides[i], writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message Mgmt.CategoryStatusOverrideBulkRequest
 */
export const CategoryStatusOverrideBulkRequest = new CategoryStatusOverrideBulkRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CategoryStatusOverrideVM$Type extends MessageType<CategoryStatusOverrideVM> {
    constructor() {
        super("Mgmt.CategoryStatusOverrideVM", [
            { no: 1, name: "categoryId", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "isActiveOverride", kind: "message", oneof: "isActive", T: () => BoolOverride }
        ]);
    }
    create(value?: PartialMessage<CategoryStatusOverrideVM>): CategoryStatusOverrideVM {
        const message = { categoryId: "", isActive: { oneofKind: undefined } };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<CategoryStatusOverrideVM>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: CategoryStatusOverrideVM): CategoryStatusOverrideVM {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string categoryId */ 1:
                    message.categoryId = reader.string();
                    break;
                case /* Mgmt.BoolOverride isActiveOverride */ 2:
                    message.isActive = {
                        oneofKind: "isActiveOverride",
                        isActiveOverride: BoolOverride.internalBinaryRead(reader, reader.uint32(), options, (message.isActive as any).isActiveOverride)
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: CategoryStatusOverrideVM, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string categoryId = 1; */
        if (message.categoryId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.categoryId);
        /* Mgmt.BoolOverride isActiveOverride = 2; */
        if (message.isActive.oneofKind === "isActiveOverride")
            BoolOverride.internalBinaryWrite(message.isActive.isActiveOverride, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message Mgmt.CategoryStatusOverrideVM
 */
export const CategoryStatusOverrideVM = new CategoryStatusOverrideVM$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CategoryOverrideRequest$Type extends MessageType<CategoryOverrideRequest> {
    constructor() {
        super("Mgmt.CategoryOverrideRequest", [
            { no: 1, name: "locationId", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "categoryId", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "nameOverride", kind: "message", oneof: "name", T: () => StringOverride },
            { no: 4, name: "imagePathOverride", kind: "message", oneof: "imagePath", T: () => StringOverride },
            { no: 5, name: "menuItemIdsOverride", kind: "message", oneof: "menuItemIds", T: () => StringListOverride },
            { no: 6, name: "isActiveOverride", kind: "message", oneof: "isActive", T: () => BoolOverride }
        ]);
    }
    create(value?: PartialMessage<CategoryOverrideRequest>): CategoryOverrideRequest {
        const message = { locationId: "", categoryId: "", name: { oneofKind: undefined }, imagePath: { oneofKind: undefined }, menuItemIds: { oneofKind: undefined }, isActive: { oneofKind: undefined } };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<CategoryOverrideRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: CategoryOverrideRequest): CategoryOverrideRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string locationId */ 1:
                    message.locationId = reader.string();
                    break;
                case /* string categoryId */ 2:
                    message.categoryId = reader.string();
                    break;
                case /* Mgmt.StringOverride nameOverride */ 3:
                    message.name = {
                        oneofKind: "nameOverride",
                        nameOverride: StringOverride.internalBinaryRead(reader, reader.uint32(), options, (message.name as any).nameOverride)
                    };
                    break;
                case /* Mgmt.StringOverride imagePathOverride */ 4:
                    message.imagePath = {
                        oneofKind: "imagePathOverride",
                        imagePathOverride: StringOverride.internalBinaryRead(reader, reader.uint32(), options, (message.imagePath as any).imagePathOverride)
                    };
                    break;
                case /* Mgmt.StringListOverride menuItemIdsOverride */ 5:
                    message.menuItemIds = {
                        oneofKind: "menuItemIdsOverride",
                        menuItemIdsOverride: StringListOverride.internalBinaryRead(reader, reader.uint32(), options, (message.menuItemIds as any).menuItemIdsOverride)
                    };
                    break;
                case /* Mgmt.BoolOverride isActiveOverride */ 6:
                    message.isActive = {
                        oneofKind: "isActiveOverride",
                        isActiveOverride: BoolOverride.internalBinaryRead(reader, reader.uint32(), options, (message.isActive as any).isActiveOverride)
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: CategoryOverrideRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string locationId = 1; */
        if (message.locationId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.locationId);
        /* string categoryId = 2; */
        if (message.categoryId !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.categoryId);
        /* Mgmt.StringOverride nameOverride = 3; */
        if (message.name.oneofKind === "nameOverride")
            StringOverride.internalBinaryWrite(message.name.nameOverride, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* Mgmt.StringOverride imagePathOverride = 4; */
        if (message.imagePath.oneofKind === "imagePathOverride")
            StringOverride.internalBinaryWrite(message.imagePath.imagePathOverride, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* Mgmt.StringListOverride menuItemIdsOverride = 5; */
        if (message.menuItemIds.oneofKind === "menuItemIdsOverride")
            StringListOverride.internalBinaryWrite(message.menuItemIds.menuItemIdsOverride, writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        /* Mgmt.BoolOverride isActiveOverride = 6; */
        if (message.isActive.oneofKind === "isActiveOverride")
            BoolOverride.internalBinaryWrite(message.isActive.isActiveOverride, writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message Mgmt.CategoryOverrideRequest
 */
export const CategoryOverrideRequest = new CategoryOverrideRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ModifierMenuItemOverrideRequest$Type extends MessageType<ModifierMenuItemOverrideRequest> {
    constructor() {
        super("Mgmt.ModifierMenuItemOverrideRequest", [
            { no: 1, name: "locationId", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "menuItemId", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "nameOverride", kind: "message", oneof: "name", T: () => StringOverride },
            { no: 15, name: "displayFlowOverride", kind: "message", oneof: "displayFlow", T: () => DisplayFlowOverride },
            { no: 4, name: "imagePathOverride", kind: "message", oneof: "imagePath", T: () => StringOverride },
            { no: 5, name: "descriptionOverride", kind: "message", oneof: "description", T: () => StringOverride },
            { no: 6, name: "modifierGroupIdsOverride", kind: "message", oneof: "modifierGroupIds", T: () => StringListOverride },
            { no: 7, name: "isActiveOverride", kind: "message", oneof: "isActive", T: () => BoolOverride }
        ]);
    }
    create(value?: PartialMessage<ModifierMenuItemOverrideRequest>): ModifierMenuItemOverrideRequest {
        const message = { locationId: "", menuItemId: "", name: { oneofKind: undefined }, displayFlow: { oneofKind: undefined }, imagePath: { oneofKind: undefined }, description: { oneofKind: undefined }, modifierGroupIds: { oneofKind: undefined }, isActive: { oneofKind: undefined } };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ModifierMenuItemOverrideRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ModifierMenuItemOverrideRequest): ModifierMenuItemOverrideRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string locationId */ 1:
                    message.locationId = reader.string();
                    break;
                case /* string menuItemId */ 2:
                    message.menuItemId = reader.string();
                    break;
                case /* Mgmt.StringOverride nameOverride */ 3:
                    message.name = {
                        oneofKind: "nameOverride",
                        nameOverride: StringOverride.internalBinaryRead(reader, reader.uint32(), options, (message.name as any).nameOverride)
                    };
                    break;
                case /* Mgmt.DisplayFlowOverride displayFlowOverride */ 15:
                    message.displayFlow = {
                        oneofKind: "displayFlowOverride",
                        displayFlowOverride: DisplayFlowOverride.internalBinaryRead(reader, reader.uint32(), options, (message.displayFlow as any).displayFlowOverride)
                    };
                    break;
                case /* Mgmt.StringOverride imagePathOverride */ 4:
                    message.imagePath = {
                        oneofKind: "imagePathOverride",
                        imagePathOverride: StringOverride.internalBinaryRead(reader, reader.uint32(), options, (message.imagePath as any).imagePathOverride)
                    };
                    break;
                case /* Mgmt.StringOverride descriptionOverride */ 5:
                    message.description = {
                        oneofKind: "descriptionOverride",
                        descriptionOverride: StringOverride.internalBinaryRead(reader, reader.uint32(), options, (message.description as any).descriptionOverride)
                    };
                    break;
                case /* Mgmt.StringListOverride modifierGroupIdsOverride */ 6:
                    message.modifierGroupIds = {
                        oneofKind: "modifierGroupIdsOverride",
                        modifierGroupIdsOverride: StringListOverride.internalBinaryRead(reader, reader.uint32(), options, (message.modifierGroupIds as any).modifierGroupIdsOverride)
                    };
                    break;
                case /* Mgmt.BoolOverride isActiveOverride */ 7:
                    message.isActive = {
                        oneofKind: "isActiveOverride",
                        isActiveOverride: BoolOverride.internalBinaryRead(reader, reader.uint32(), options, (message.isActive as any).isActiveOverride)
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ModifierMenuItemOverrideRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string locationId = 1; */
        if (message.locationId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.locationId);
        /* string menuItemId = 2; */
        if (message.menuItemId !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.menuItemId);
        /* Mgmt.StringOverride nameOverride = 3; */
        if (message.name.oneofKind === "nameOverride")
            StringOverride.internalBinaryWrite(message.name.nameOverride, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* Mgmt.DisplayFlowOverride displayFlowOverride = 15; */
        if (message.displayFlow.oneofKind === "displayFlowOverride")
            DisplayFlowOverride.internalBinaryWrite(message.displayFlow.displayFlowOverride, writer.tag(15, WireType.LengthDelimited).fork(), options).join();
        /* Mgmt.StringOverride imagePathOverride = 4; */
        if (message.imagePath.oneofKind === "imagePathOverride")
            StringOverride.internalBinaryWrite(message.imagePath.imagePathOverride, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* Mgmt.StringOverride descriptionOverride = 5; */
        if (message.description.oneofKind === "descriptionOverride")
            StringOverride.internalBinaryWrite(message.description.descriptionOverride, writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        /* Mgmt.StringListOverride modifierGroupIdsOverride = 6; */
        if (message.modifierGroupIds.oneofKind === "modifierGroupIdsOverride")
            StringListOverride.internalBinaryWrite(message.modifierGroupIds.modifierGroupIdsOverride, writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        /* Mgmt.BoolOverride isActiveOverride = 7; */
        if (message.isActive.oneofKind === "isActiveOverride")
            BoolOverride.internalBinaryWrite(message.isActive.isActiveOverride, writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message Mgmt.ModifierMenuItemOverrideRequest
 */
export const ModifierMenuItemOverrideRequest = new ModifierMenuItemOverrideRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MenuItemStatusOverrideBulkRequest$Type extends MessageType<MenuItemStatusOverrideBulkRequest> {
    constructor() {
        super("Mgmt.MenuItemStatusOverrideBulkRequest", [
            { no: 1, name: "locationId", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "menuItemStatusOverrides", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => MenuItemStatusOverrideVM }
        ]);
    }
    create(value?: PartialMessage<MenuItemStatusOverrideBulkRequest>): MenuItemStatusOverrideBulkRequest {
        const message = { locationId: "", menuItemStatusOverrides: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<MenuItemStatusOverrideBulkRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MenuItemStatusOverrideBulkRequest): MenuItemStatusOverrideBulkRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string locationId */ 1:
                    message.locationId = reader.string();
                    break;
                case /* repeated Mgmt.MenuItemStatusOverrideVM menuItemStatusOverrides */ 2:
                    message.menuItemStatusOverrides.push(MenuItemStatusOverrideVM.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: MenuItemStatusOverrideBulkRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string locationId = 1; */
        if (message.locationId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.locationId);
        /* repeated Mgmt.MenuItemStatusOverrideVM menuItemStatusOverrides = 2; */
        for (let i = 0; i < message.menuItemStatusOverrides.length; i++)
            MenuItemStatusOverrideVM.internalBinaryWrite(message.menuItemStatusOverrides[i], writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message Mgmt.MenuItemStatusOverrideBulkRequest
 */
export const MenuItemStatusOverrideBulkRequest = new MenuItemStatusOverrideBulkRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MenuItemStatusOverrideVM$Type extends MessageType<MenuItemStatusOverrideVM> {
    constructor() {
        super("Mgmt.MenuItemStatusOverrideVM", [
            { no: 1, name: "menuItemId", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "isActiveOverride", kind: "message", oneof: "isActive", T: () => BoolOverride }
        ]);
    }
    create(value?: PartialMessage<MenuItemStatusOverrideVM>): MenuItemStatusOverrideVM {
        const message = { menuItemId: "", isActive: { oneofKind: undefined } };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<MenuItemStatusOverrideVM>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MenuItemStatusOverrideVM): MenuItemStatusOverrideVM {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string menuItemId */ 1:
                    message.menuItemId = reader.string();
                    break;
                case /* Mgmt.BoolOverride isActiveOverride */ 2:
                    message.isActive = {
                        oneofKind: "isActiveOverride",
                        isActiveOverride: BoolOverride.internalBinaryRead(reader, reader.uint32(), options, (message.isActive as any).isActiveOverride)
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: MenuItemStatusOverrideVM, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string menuItemId = 1; */
        if (message.menuItemId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.menuItemId);
        /* Mgmt.BoolOverride isActiveOverride = 2; */
        if (message.isActive.oneofKind === "isActiveOverride")
            BoolOverride.internalBinaryWrite(message.isActive.isActiveOverride, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message Mgmt.MenuItemStatusOverrideVM
 */
export const MenuItemStatusOverrideVM = new MenuItemStatusOverrideVM$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MenuItemOverrideRequest$Type extends MessageType<MenuItemOverrideRequest> {
    constructor() {
        super("Mgmt.MenuItemOverrideRequest", [
            { no: 1, name: "locationId", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "menuItemId", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "nameOverride", kind: "message", oneof: "name", T: () => StringOverride },
            { no: 15, name: "displayFlowOverride", kind: "message", oneof: "displayFlow", T: () => DisplayFlowOverride },
            { no: 4, name: "imagePathOverride", kind: "message", oneof: "imagePath", T: () => StringOverride },
            { no: 5, name: "descriptionOverride", kind: "message", oneof: "description", T: () => StringOverride },
            { no: 6, name: "modifierGroupIdsOverride", kind: "message", oneof: "modifierGroupIds", T: () => StringListOverride },
            { no: 7, name: "isActiveOverride", kind: "message", oneof: "isActive", T: () => BoolOverride },
            { no: 8, name: "calorieTextOverride", kind: "message", oneof: "calorieText", T: () => StringOverride },
            { no: 9, name: "selectedImagePathOverride", kind: "message", oneof: "selectedImagePath", T: () => StringOverride },
            { no: 10, name: "selectedDisplayNameOverride", kind: "message", oneof: "selectedDisplayName", T: () => StringOverride }
        ]);
    }
    create(value?: PartialMessage<MenuItemOverrideRequest>): MenuItemOverrideRequest {
        const message = { locationId: "", menuItemId: "", name: { oneofKind: undefined }, displayFlow: { oneofKind: undefined }, imagePath: { oneofKind: undefined }, description: { oneofKind: undefined }, modifierGroupIds: { oneofKind: undefined }, isActive: { oneofKind: undefined }, calorieText: { oneofKind: undefined }, selectedImagePath: { oneofKind: undefined }, selectedDisplayName: { oneofKind: undefined } };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<MenuItemOverrideRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MenuItemOverrideRequest): MenuItemOverrideRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string locationId */ 1:
                    message.locationId = reader.string();
                    break;
                case /* string menuItemId */ 2:
                    message.menuItemId = reader.string();
                    break;
                case /* Mgmt.StringOverride nameOverride */ 3:
                    message.name = {
                        oneofKind: "nameOverride",
                        nameOverride: StringOverride.internalBinaryRead(reader, reader.uint32(), options, (message.name as any).nameOverride)
                    };
                    break;
                case /* Mgmt.DisplayFlowOverride displayFlowOverride */ 15:
                    message.displayFlow = {
                        oneofKind: "displayFlowOverride",
                        displayFlowOverride: DisplayFlowOverride.internalBinaryRead(reader, reader.uint32(), options, (message.displayFlow as any).displayFlowOverride)
                    };
                    break;
                case /* Mgmt.StringOverride imagePathOverride */ 4:
                    message.imagePath = {
                        oneofKind: "imagePathOverride",
                        imagePathOverride: StringOverride.internalBinaryRead(reader, reader.uint32(), options, (message.imagePath as any).imagePathOverride)
                    };
                    break;
                case /* Mgmt.StringOverride descriptionOverride */ 5:
                    message.description = {
                        oneofKind: "descriptionOverride",
                        descriptionOverride: StringOverride.internalBinaryRead(reader, reader.uint32(), options, (message.description as any).descriptionOverride)
                    };
                    break;
                case /* Mgmt.StringListOverride modifierGroupIdsOverride */ 6:
                    message.modifierGroupIds = {
                        oneofKind: "modifierGroupIdsOverride",
                        modifierGroupIdsOverride: StringListOverride.internalBinaryRead(reader, reader.uint32(), options, (message.modifierGroupIds as any).modifierGroupIdsOverride)
                    };
                    break;
                case /* Mgmt.BoolOverride isActiveOverride */ 7:
                    message.isActive = {
                        oneofKind: "isActiveOverride",
                        isActiveOverride: BoolOverride.internalBinaryRead(reader, reader.uint32(), options, (message.isActive as any).isActiveOverride)
                    };
                    break;
                case /* Mgmt.StringOverride calorieTextOverride */ 8:
                    message.calorieText = {
                        oneofKind: "calorieTextOverride",
                        calorieTextOverride: StringOverride.internalBinaryRead(reader, reader.uint32(), options, (message.calorieText as any).calorieTextOverride)
                    };
                    break;
                case /* Mgmt.StringOverride selectedImagePathOverride */ 9:
                    message.selectedImagePath = {
                        oneofKind: "selectedImagePathOverride",
                        selectedImagePathOverride: StringOverride.internalBinaryRead(reader, reader.uint32(), options, (message.selectedImagePath as any).selectedImagePathOverride)
                    };
                    break;
                case /* Mgmt.StringOverride selectedDisplayNameOverride */ 10:
                    message.selectedDisplayName = {
                        oneofKind: "selectedDisplayNameOverride",
                        selectedDisplayNameOverride: StringOverride.internalBinaryRead(reader, reader.uint32(), options, (message.selectedDisplayName as any).selectedDisplayNameOverride)
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: MenuItemOverrideRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string locationId = 1; */
        if (message.locationId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.locationId);
        /* string menuItemId = 2; */
        if (message.menuItemId !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.menuItemId);
        /* Mgmt.StringOverride nameOverride = 3; */
        if (message.name.oneofKind === "nameOverride")
            StringOverride.internalBinaryWrite(message.name.nameOverride, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* Mgmt.DisplayFlowOverride displayFlowOverride = 15; */
        if (message.displayFlow.oneofKind === "displayFlowOverride")
            DisplayFlowOverride.internalBinaryWrite(message.displayFlow.displayFlowOverride, writer.tag(15, WireType.LengthDelimited).fork(), options).join();
        /* Mgmt.StringOverride imagePathOverride = 4; */
        if (message.imagePath.oneofKind === "imagePathOverride")
            StringOverride.internalBinaryWrite(message.imagePath.imagePathOverride, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* Mgmt.StringOverride descriptionOverride = 5; */
        if (message.description.oneofKind === "descriptionOverride")
            StringOverride.internalBinaryWrite(message.description.descriptionOverride, writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        /* Mgmt.StringListOverride modifierGroupIdsOverride = 6; */
        if (message.modifierGroupIds.oneofKind === "modifierGroupIdsOverride")
            StringListOverride.internalBinaryWrite(message.modifierGroupIds.modifierGroupIdsOverride, writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        /* Mgmt.BoolOverride isActiveOverride = 7; */
        if (message.isActive.oneofKind === "isActiveOverride")
            BoolOverride.internalBinaryWrite(message.isActive.isActiveOverride, writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        /* Mgmt.StringOverride calorieTextOverride = 8; */
        if (message.calorieText.oneofKind === "calorieTextOverride")
            StringOverride.internalBinaryWrite(message.calorieText.calorieTextOverride, writer.tag(8, WireType.LengthDelimited).fork(), options).join();
        /* Mgmt.StringOverride selectedImagePathOverride = 9; */
        if (message.selectedImagePath.oneofKind === "selectedImagePathOverride")
            StringOverride.internalBinaryWrite(message.selectedImagePath.selectedImagePathOverride, writer.tag(9, WireType.LengthDelimited).fork(), options).join();
        /* Mgmt.StringOverride selectedDisplayNameOverride = 10; */
        if (message.selectedDisplayName.oneofKind === "selectedDisplayNameOverride")
            StringOverride.internalBinaryWrite(message.selectedDisplayName.selectedDisplayNameOverride, writer.tag(10, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message Mgmt.MenuItemOverrideRequest
 */
export const MenuItemOverrideRequest = new MenuItemOverrideRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ModifierGroupStatusOverrideBulkRequest$Type extends MessageType<ModifierGroupStatusOverrideBulkRequest> {
    constructor() {
        super("Mgmt.ModifierGroupStatusOverrideBulkRequest", [
            { no: 1, name: "locationId", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "modiferGroupOverrides", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ModiferGroupStatusOverrideVM }
        ]);
    }
    create(value?: PartialMessage<ModifierGroupStatusOverrideBulkRequest>): ModifierGroupStatusOverrideBulkRequest {
        const message = { locationId: "", modiferGroupOverrides: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ModifierGroupStatusOverrideBulkRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ModifierGroupStatusOverrideBulkRequest): ModifierGroupStatusOverrideBulkRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string locationId */ 1:
                    message.locationId = reader.string();
                    break;
                case /* repeated Mgmt.ModiferGroupStatusOverrideVM modiferGroupOverrides */ 2:
                    message.modiferGroupOverrides.push(ModiferGroupStatusOverrideVM.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ModifierGroupStatusOverrideBulkRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string locationId = 1; */
        if (message.locationId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.locationId);
        /* repeated Mgmt.ModiferGroupStatusOverrideVM modiferGroupOverrides = 2; */
        for (let i = 0; i < message.modiferGroupOverrides.length; i++)
            ModiferGroupStatusOverrideVM.internalBinaryWrite(message.modiferGroupOverrides[i], writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message Mgmt.ModifierGroupStatusOverrideBulkRequest
 */
export const ModifierGroupStatusOverrideBulkRequest = new ModifierGroupStatusOverrideBulkRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ModiferGroupStatusOverrideVM$Type extends MessageType<ModiferGroupStatusOverrideVM> {
    constructor() {
        super("Mgmt.ModiferGroupStatusOverrideVM", [
            { no: 1, name: "modifierGroupId", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "isActiveOverride", kind: "message", oneof: "isActive", T: () => BoolOverride }
        ]);
    }
    create(value?: PartialMessage<ModiferGroupStatusOverrideVM>): ModiferGroupStatusOverrideVM {
        const message = { modifierGroupId: "", isActive: { oneofKind: undefined } };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ModiferGroupStatusOverrideVM>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ModiferGroupStatusOverrideVM): ModiferGroupStatusOverrideVM {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string modifierGroupId */ 1:
                    message.modifierGroupId = reader.string();
                    break;
                case /* Mgmt.BoolOverride isActiveOverride */ 2:
                    message.isActive = {
                        oneofKind: "isActiveOverride",
                        isActiveOverride: BoolOverride.internalBinaryRead(reader, reader.uint32(), options, (message.isActive as any).isActiveOverride)
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ModiferGroupStatusOverrideVM, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string modifierGroupId = 1; */
        if (message.modifierGroupId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.modifierGroupId);
        /* Mgmt.BoolOverride isActiveOverride = 2; */
        if (message.isActive.oneofKind === "isActiveOverride")
            BoolOverride.internalBinaryWrite(message.isActive.isActiveOverride, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message Mgmt.ModiferGroupStatusOverrideVM
 */
export const ModiferGroupStatusOverrideVM = new ModiferGroupStatusOverrideVM$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ModifierGroupOverrideRequest$Type extends MessageType<ModifierGroupOverrideRequest> {
    constructor() {
        super("Mgmt.ModifierGroupOverrideRequest", [
            { no: 1, name: "locationId", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "modifierGroupId", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "nameOverride", kind: "message", oneof: "name", T: () => StringOverride },
            { no: 16, name: "displayNameOverride", kind: "message", oneof: "displayName", T: () => StringOverride },
            { no: 4, name: "selectMinOverride", kind: "message", oneof: "selectMin", T: () => IntOverride },
            { no: 5, name: "selectMaxOverride", kind: "message", oneof: "selectMax", T: () => IntOverride },
            { no: 7, name: "isActiveOverride", kind: "message", oneof: "isActive", T: () => BoolOverride },
            { no: 15, name: "displayFlowOverride", kind: "message", oneof: "displayFlow", T: () => StringOverride },
            { no: 17, name: "modifiersOverride", kind: "message", oneof: "modifiers", T: () => ModifierGroupModifiersOverride }
        ]);
    }
    create(value?: PartialMessage<ModifierGroupOverrideRequest>): ModifierGroupOverrideRequest {
        const message = { locationId: "", modifierGroupId: "", name: { oneofKind: undefined }, displayName: { oneofKind: undefined }, selectMin: { oneofKind: undefined }, selectMax: { oneofKind: undefined }, isActive: { oneofKind: undefined }, displayFlow: { oneofKind: undefined }, modifiers: { oneofKind: undefined } };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ModifierGroupOverrideRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ModifierGroupOverrideRequest): ModifierGroupOverrideRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string locationId */ 1:
                    message.locationId = reader.string();
                    break;
                case /* string modifierGroupId */ 2:
                    message.modifierGroupId = reader.string();
                    break;
                case /* Mgmt.StringOverride nameOverride */ 3:
                    message.name = {
                        oneofKind: "nameOverride",
                        nameOverride: StringOverride.internalBinaryRead(reader, reader.uint32(), options, (message.name as any).nameOverride)
                    };
                    break;
                case /* Mgmt.StringOverride displayNameOverride */ 16:
                    message.displayName = {
                        oneofKind: "displayNameOverride",
                        displayNameOverride: StringOverride.internalBinaryRead(reader, reader.uint32(), options, (message.displayName as any).displayNameOverride)
                    };
                    break;
                case /* Mgmt.IntOverride selectMinOverride */ 4:
                    message.selectMin = {
                        oneofKind: "selectMinOverride",
                        selectMinOverride: IntOverride.internalBinaryRead(reader, reader.uint32(), options, (message.selectMin as any).selectMinOverride)
                    };
                    break;
                case /* Mgmt.IntOverride selectMaxOverride */ 5:
                    message.selectMax = {
                        oneofKind: "selectMaxOverride",
                        selectMaxOverride: IntOverride.internalBinaryRead(reader, reader.uint32(), options, (message.selectMax as any).selectMaxOverride)
                    };
                    break;
                case /* Mgmt.BoolOverride isActiveOverride */ 7:
                    message.isActive = {
                        oneofKind: "isActiveOverride",
                        isActiveOverride: BoolOverride.internalBinaryRead(reader, reader.uint32(), options, (message.isActive as any).isActiveOverride)
                    };
                    break;
                case /* Mgmt.StringOverride displayFlowOverride */ 15:
                    message.displayFlow = {
                        oneofKind: "displayFlowOverride",
                        displayFlowOverride: StringOverride.internalBinaryRead(reader, reader.uint32(), options, (message.displayFlow as any).displayFlowOverride)
                    };
                    break;
                case /* Mgmt.ModifierGroupModifiersOverride modifiersOverride */ 17:
                    message.modifiers = {
                        oneofKind: "modifiersOverride",
                        modifiersOverride: ModifierGroupModifiersOverride.internalBinaryRead(reader, reader.uint32(), options, (message.modifiers as any).modifiersOverride)
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ModifierGroupOverrideRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string locationId = 1; */
        if (message.locationId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.locationId);
        /* string modifierGroupId = 2; */
        if (message.modifierGroupId !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.modifierGroupId);
        /* Mgmt.StringOverride nameOverride = 3; */
        if (message.name.oneofKind === "nameOverride")
            StringOverride.internalBinaryWrite(message.name.nameOverride, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* Mgmt.StringOverride displayNameOverride = 16; */
        if (message.displayName.oneofKind === "displayNameOverride")
            StringOverride.internalBinaryWrite(message.displayName.displayNameOverride, writer.tag(16, WireType.LengthDelimited).fork(), options).join();
        /* Mgmt.IntOverride selectMinOverride = 4; */
        if (message.selectMin.oneofKind === "selectMinOverride")
            IntOverride.internalBinaryWrite(message.selectMin.selectMinOverride, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* Mgmt.IntOverride selectMaxOverride = 5; */
        if (message.selectMax.oneofKind === "selectMaxOverride")
            IntOverride.internalBinaryWrite(message.selectMax.selectMaxOverride, writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        /* Mgmt.BoolOverride isActiveOverride = 7; */
        if (message.isActive.oneofKind === "isActiveOverride")
            BoolOverride.internalBinaryWrite(message.isActive.isActiveOverride, writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        /* Mgmt.StringOverride displayFlowOverride = 15; */
        if (message.displayFlow.oneofKind === "displayFlowOverride")
            StringOverride.internalBinaryWrite(message.displayFlow.displayFlowOverride, writer.tag(15, WireType.LengthDelimited).fork(), options).join();
        /* Mgmt.ModifierGroupModifiersOverride modifiersOverride = 17; */
        if (message.modifiers.oneofKind === "modifiersOverride")
            ModifierGroupModifiersOverride.internalBinaryWrite(message.modifiers.modifiersOverride, writer.tag(17, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message Mgmt.ModifierGroupOverrideRequest
 */
export const ModifierGroupOverrideRequest = new ModifierGroupOverrideRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ModifierGroupModifiersOverride$Type extends MessageType<ModifierGroupModifiersOverride> {
    constructor() {
        super("Mgmt.ModifierGroupModifiersOverride", [
            { no: 1, name: "value", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ModifierGroupModifierOverride },
            { no: 2, name: "action", kind: "enum", T: () => ["Mgmt.OverrideAction", OverrideAction] }
        ]);
    }
    create(value?: PartialMessage<ModifierGroupModifiersOverride>): ModifierGroupModifiersOverride {
        const message = { value: [], action: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ModifierGroupModifiersOverride>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ModifierGroupModifiersOverride): ModifierGroupModifiersOverride {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated Mgmt.ModifierGroupModifierOverride value */ 1:
                    message.value.push(ModifierGroupModifierOverride.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* Mgmt.OverrideAction action */ 2:
                    message.action = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ModifierGroupModifiersOverride, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated Mgmt.ModifierGroupModifierOverride value = 1; */
        for (let i = 0; i < message.value.length; i++)
            ModifierGroupModifierOverride.internalBinaryWrite(message.value[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* Mgmt.OverrideAction action = 2; */
        if (message.action !== 0)
            writer.tag(2, WireType.Varint).int32(message.action);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message Mgmt.ModifierGroupModifiersOverride
 */
export const ModifierGroupModifiersOverride = new ModifierGroupModifiersOverride$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ModifierGroupModifierOverride$Type extends MessageType<ModifierGroupModifierOverride> {
    constructor() {
        super("Mgmt.ModifierGroupModifierOverride", [
            { no: 2, name: "menuItemId", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "fields", kind: "message", T: () => ModifierFields }
        ]);
    }
    create(value?: PartialMessage<ModifierGroupModifierOverride>): ModifierGroupModifierOverride {
        const message = { menuItemId: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ModifierGroupModifierOverride>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ModifierGroupModifierOverride): ModifierGroupModifierOverride {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string menuItemId */ 2:
                    message.menuItemId = reader.string();
                    break;
                case /* Mgmt.ModifierFields fields */ 3:
                    message.fields = ModifierFields.internalBinaryRead(reader, reader.uint32(), options, message.fields);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ModifierGroupModifierOverride, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string menuItemId = 2; */
        if (message.menuItemId !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.menuItemId);
        /* Mgmt.ModifierFields fields = 3; */
        if (message.fields)
            ModifierFields.internalBinaryWrite(message.fields, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message Mgmt.ModifierGroupModifierOverride
 */
export const ModifierGroupModifierOverride = new ModifierGroupModifierOverride$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ModifierFields$Type extends MessageType<ModifierFields> {
    constructor() {
        super("Mgmt.ModifierFields", [
            { no: 3, name: "isDefaultOverride", kind: "message", oneof: "isDefault", T: () => BoolOverride },
            { no: 4, name: "maxQuantityOverride", kind: "message", oneof: "maxQuantity", T: () => IntOverride },
            { no: 5, name: "isInvisibleOverride", kind: "message", oneof: "isInvisible", T: () => BoolOverride }
        ]);
    }
    create(value?: PartialMessage<ModifierFields>): ModifierFields {
        const message = { isDefault: { oneofKind: undefined }, maxQuantity: { oneofKind: undefined }, isInvisible: { oneofKind: undefined } };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ModifierFields>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ModifierFields): ModifierFields {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* Mgmt.BoolOverride isDefaultOverride */ 3:
                    message.isDefault = {
                        oneofKind: "isDefaultOverride",
                        isDefaultOverride: BoolOverride.internalBinaryRead(reader, reader.uint32(), options, (message.isDefault as any).isDefaultOverride)
                    };
                    break;
                case /* Mgmt.IntOverride maxQuantityOverride */ 4:
                    message.maxQuantity = {
                        oneofKind: "maxQuantityOverride",
                        maxQuantityOverride: IntOverride.internalBinaryRead(reader, reader.uint32(), options, (message.maxQuantity as any).maxQuantityOverride)
                    };
                    break;
                case /* Mgmt.BoolOverride isInvisibleOverride */ 5:
                    message.isInvisible = {
                        oneofKind: "isInvisibleOverride",
                        isInvisibleOverride: BoolOverride.internalBinaryRead(reader, reader.uint32(), options, (message.isInvisible as any).isInvisibleOverride)
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ModifierFields, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* Mgmt.BoolOverride isDefaultOverride = 3; */
        if (message.isDefault.oneofKind === "isDefaultOverride")
            BoolOverride.internalBinaryWrite(message.isDefault.isDefaultOverride, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* Mgmt.IntOverride maxQuantityOverride = 4; */
        if (message.maxQuantity.oneofKind === "maxQuantityOverride")
            IntOverride.internalBinaryWrite(message.maxQuantity.maxQuantityOverride, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* Mgmt.BoolOverride isInvisibleOverride = 5; */
        if (message.isInvisible.oneofKind === "isInvisibleOverride")
            BoolOverride.internalBinaryWrite(message.isInvisible.isInvisibleOverride, writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message Mgmt.ModifierFields
 */
export const ModifierFields = new ModifierFields$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ModifierOverrideRequest$Type extends MessageType<ModifierOverrideRequest> {
    constructor() {
        super("Mgmt.ModifierOverrideRequest", [
            { no: 1, name: "locationId", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "modifierId", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "fields", kind: "message", T: () => ModifierFields }
        ]);
    }
    create(value?: PartialMessage<ModifierOverrideRequest>): ModifierOverrideRequest {
        const message = { locationId: "", modifierId: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ModifierOverrideRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ModifierOverrideRequest): ModifierOverrideRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string locationId */ 1:
                    message.locationId = reader.string();
                    break;
                case /* string modifierId */ 2:
                    message.modifierId = reader.string();
                    break;
                case /* Mgmt.ModifierFields fields */ 3:
                    message.fields = ModifierFields.internalBinaryRead(reader, reader.uint32(), options, message.fields);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ModifierOverrideRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string locationId = 1; */
        if (message.locationId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.locationId);
        /* string modifierId = 2; */
        if (message.modifierId !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.modifierId);
        /* Mgmt.ModifierFields fields = 3; */
        if (message.fields)
            ModifierFields.internalBinaryWrite(message.fields, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message Mgmt.ModifierOverrideRequest
 */
export const ModifierOverrideRequest = new ModifierOverrideRequest$Type();
/**
 * @generated ServiceType for protobuf service Mgmt.MenuService
 */
export const MenuService = new ServiceType("Mgmt.MenuService", [
    { name: "GetEffectiveMenu", options: {}, I: LocationRequest, O: MenuResponse },
    { name: "GetItem86List", options: {}, I: LocationRequest, O: Item86Response },
    { name: "UpdateItem86List", options: {}, I: Item86Request, O: EmptyResponse },
    { name: "CreateCategory", options: {}, I: CategoryOverrideRequest, O: CreateEntityResponse },
    { name: "DeleteCategory", options: {}, I: CategoryRequest, O: EmptyResponse },
    { name: "UpdateCategoryOverride", options: {}, I: CategoryOverrideRequest, O: EmptyResponse },
    { name: "UpdateCategoryStatusOverrideBulkRequest", options: {}, I: CategoryStatusOverrideBulkRequest, O: EmptyResponse },
    { name: "UpdateMenuItemOverride", options: {}, I: MenuItemOverrideRequest, O: EmptyResponse },
    { name: "UpdateMenuItemStatusOverrideBulk", options: {}, I: MenuItemStatusOverrideBulkRequest, O: EmptyResponse },
    { name: "UpdateModifierMenuItemOverride", options: {}, I: ModifierMenuItemOverrideRequest, O: EmptyResponse },
    { name: "UpdateModifierGroupOverride", options: {}, I: ModifierGroupOverrideRequest, O: EmptyResponse },
    { name: "UpdateModifierGroupStatusOverrideBulk", options: {}, I: ModifierGroupStatusOverrideBulkRequest, O: EmptyResponse },
    { name: "CreateModifierGroup", options: {}, I: ModifierGroupOverrideRequest, O: CreateEntityResponse },
    { name: "DeleteModifierGroup", options: {}, I: ModifierGroupRequest, O: EmptyResponse },
    { name: "UpdateModifierOverride", options: {}, I: ModifierOverrideRequest, O: EmptyResponse },
    { name: "CreateMessageGuard", options: {}, I: MessageGuardRequest, O: EmptyResponse },
    { name: "UpdateMessageGuard", options: {}, I: MessageGuardRequest, O: EmptyResponse },
    { name: "RemoveMessageGuard", options: {}, I: RemoveMessageGuardRequest, O: EmptyResponse },
    { name: "GetMessageGuards", options: {}, I: LocationRequest, O: MessageGuardResponse },
    { name: "GetMenuLayouts", options: {}, I: LocationRequest, O: MenuLayoutsResponse },
    { name: "GetMenuLayout", options: {}, I: MenuLayoutRequest, O: MenuLayoutResponse },
    { name: "UpdateMenuLayout", options: {}, I: UpdateMenuLayoutRequest, O: MenuLayoutResponse },
    { name: "CreateMenuLayout", options: {}, I: UpdateMenuLayoutRequest, O: MenuLayoutResponse },
    { name: "GetPosVault", options: {}, I: LocationRequest, O: PosVaultResponse }
]);
