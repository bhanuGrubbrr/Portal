/* eslint-disable */
// @generated by protobuf-ts 2.9.0 with parameter ts_nocheck,eslint_disable,add_pb_suffix,long_type_string,generate_dependencies
// @generated from protobuf file "loyaltyService.proto" (package "Mgmt", syntax proto3)
// tslint:disable
// @ts-nocheck
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { LoyaltyService } from "./loyaltyService_pb";
import type { DiscountTendersVM } from "./loyalty_pb";
import type { LocationLoyaltyConfigRequest } from "./loyalty_pb";
import type { LoyaltyIntegrationConfigVM } from "./loyalty_pb";
import type { LocationRequest } from "./common_pb";
import type { EmptyResponse } from "./common_pb";
import type { RemoveIntegrationRequest } from "./loyalty_pb";
import type { LoyaltyIntegrationDefinitionVM } from "./loyalty_pb";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { LoyaltyIntegrationDefinitionsVM } from "./loyalty_pb";
import type { EmptyRequest } from "./common_pb";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service Mgmt.LoyaltyService
 */
export interface ILoyaltyServiceClient {
    /**
     * admin
     *
     * @generated from protobuf rpc: GetIntegrationDefinitions(Mgmt.EmptyRequest) returns (Mgmt.LoyaltyIntegrationDefinitionsVM);
     */
    getIntegrationDefinitions(input: EmptyRequest, options?: RpcOptions): UnaryCall<EmptyRequest, LoyaltyIntegrationDefinitionsVM>;
    /**
     * @generated from protobuf rpc: UpsertIntegrationDefinition(Mgmt.LoyaltyIntegrationDefinitionVM) returns (Mgmt.LoyaltyIntegrationDefinitionVM);
     */
    upsertIntegrationDefinition(input: LoyaltyIntegrationDefinitionVM, options?: RpcOptions): UnaryCall<LoyaltyIntegrationDefinitionVM, LoyaltyIntegrationDefinitionVM>;
    /**
     * @generated from protobuf rpc: RemoveIntegrationDefinition(Mgmt.RemoveIntegrationRequest) returns (Mgmt.EmptyResponse);
     */
    removeIntegrationDefinition(input: RemoveIntegrationRequest, options?: RpcOptions): UnaryCall<RemoveIntegrationRequest, EmptyResponse>;
    /**
     * location
     *
     * @generated from protobuf rpc: GetLocationConfig(Mgmt.LocationRequest) returns (Mgmt.LoyaltyIntegrationConfigVM);
     */
    getLocationConfig(input: LocationRequest, options?: RpcOptions): UnaryCall<LocationRequest, LoyaltyIntegrationConfigVM>;
    /**
     * @generated from protobuf rpc: UpdateLocationConfig(Mgmt.LocationLoyaltyConfigRequest) returns (Mgmt.LoyaltyIntegrationConfigVM);
     */
    updateLocationConfig(input: LocationLoyaltyConfigRequest, options?: RpcOptions): UnaryCall<LocationLoyaltyConfigRequest, LoyaltyIntegrationConfigVM>;
    /**
     * tenders
     *
     * @generated from protobuf rpc: GetDiscountTenders(Mgmt.LocationRequest) returns (Mgmt.DiscountTendersVM);
     */
    getDiscountTenders(input: LocationRequest, options?: RpcOptions): UnaryCall<LocationRequest, DiscountTendersVM>;
}
/**
 * @generated from protobuf service Mgmt.LoyaltyService
 */
export class LoyaltyServiceClient implements ILoyaltyServiceClient, ServiceInfo {
    typeName = LoyaltyService.typeName;
    methods = LoyaltyService.methods;
    options = LoyaltyService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * admin
     *
     * @generated from protobuf rpc: GetIntegrationDefinitions(Mgmt.EmptyRequest) returns (Mgmt.LoyaltyIntegrationDefinitionsVM);
     */
    getIntegrationDefinitions(input: EmptyRequest, options?: RpcOptions): UnaryCall<EmptyRequest, LoyaltyIntegrationDefinitionsVM> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<EmptyRequest, LoyaltyIntegrationDefinitionsVM>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: UpsertIntegrationDefinition(Mgmt.LoyaltyIntegrationDefinitionVM) returns (Mgmt.LoyaltyIntegrationDefinitionVM);
     */
    upsertIntegrationDefinition(input: LoyaltyIntegrationDefinitionVM, options?: RpcOptions): UnaryCall<LoyaltyIntegrationDefinitionVM, LoyaltyIntegrationDefinitionVM> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<LoyaltyIntegrationDefinitionVM, LoyaltyIntegrationDefinitionVM>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: RemoveIntegrationDefinition(Mgmt.RemoveIntegrationRequest) returns (Mgmt.EmptyResponse);
     */
    removeIntegrationDefinition(input: RemoveIntegrationRequest, options?: RpcOptions): UnaryCall<RemoveIntegrationRequest, EmptyResponse> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<RemoveIntegrationRequest, EmptyResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * location
     *
     * @generated from protobuf rpc: GetLocationConfig(Mgmt.LocationRequest) returns (Mgmt.LoyaltyIntegrationConfigVM);
     */
    getLocationConfig(input: LocationRequest, options?: RpcOptions): UnaryCall<LocationRequest, LoyaltyIntegrationConfigVM> {
        const method = this.methods[3], opt = this._transport.mergeOptions(options);
        return stackIntercept<LocationRequest, LoyaltyIntegrationConfigVM>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: UpdateLocationConfig(Mgmt.LocationLoyaltyConfigRequest) returns (Mgmt.LoyaltyIntegrationConfigVM);
     */
    updateLocationConfig(input: LocationLoyaltyConfigRequest, options?: RpcOptions): UnaryCall<LocationLoyaltyConfigRequest, LoyaltyIntegrationConfigVM> {
        const method = this.methods[4], opt = this._transport.mergeOptions(options);
        return stackIntercept<LocationLoyaltyConfigRequest, LoyaltyIntegrationConfigVM>("unary", this._transport, method, opt, input);
    }
    /**
     * tenders
     *
     * @generated from protobuf rpc: GetDiscountTenders(Mgmt.LocationRequest) returns (Mgmt.DiscountTendersVM);
     */
    getDiscountTenders(input: LocationRequest, options?: RpcOptions): UnaryCall<LocationRequest, DiscountTendersVM> {
        const method = this.methods[5], opt = this._transport.mergeOptions(options);
        return stackIntercept<LocationRequest, DiscountTendersVM>("unary", this._transport, method, opt, input);
    }
}
