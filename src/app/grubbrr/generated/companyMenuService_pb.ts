/* eslint-disable */
// @generated by protobuf-ts 2.9.0 with parameter ts_nocheck,eslint_disable,add_pb_suffix,long_type_string,generate_dependencies
// @generated from protobuf file "companyMenuService.proto" (package "Mgmt", syntax proto3)
// tslint:disable
// @ts-nocheck
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { OverrideAction } from "./common_pb";
import { MenuItemDisplayFlow } from "./menu_pb";
import { IntOverride } from "./common_pb";
import { BoolOverride } from "./common_pb";
import { StringListOverride } from "./common_pb";
import { StringOverride } from "./common_pb";
/**
 * @generated from protobuf message Mgmt.CompanyMenusRequest
 */
export interface CompanyMenusRequest {
    /**
     * @generated from protobuf field: string companyId = 1;
     */
    companyId: string;
}
/**
 * @generated from protobuf message Mgmt.CompanyMenuResponse
 */
export interface CompanyMenuResponse {
}
/**
 * @generated from protobuf message Mgmt.CompanyMasterMenu
 */
export interface CompanyMasterMenu {
    /**
     * @generated from protobuf field: string companyId = 1;
     */
    companyId: string;
    /**
     * @generated from protobuf field: repeated Mgmt.MasterMenuSectionOverride menuSectionOverrides = 2;
     */
    menuSectionOverrides: MasterMenuSectionOverride[];
    /**
     * @generated from protobuf field: repeated Mgmt.MasterMenuItemOverride menuItemOverrides = 3;
     */
    menuItemOverrides: MasterMenuItemOverride[];
    /**
     * @generated from protobuf field: repeated Mgmt.MasterModifierGroupOverride modifierGroupOverrides = 4;
     */
    modifierGroupOverrides: MasterModifierGroupOverride[];
    /**
     * @generated from protobuf field: repeated Mgmt.MasterModifierOverride modifierOverrides = 5;
     */
    modifierOverrides: MasterModifierOverride[];
}
/**
 * @generated from protobuf message Mgmt.MasterMenuSectionOverride
 */
export interface MasterMenuSectionOverride {
    /**
     * @generated from protobuf field: string companyId = 1;
     */
    companyId: string;
    /**
     * @generated from protobuf field: string categoryId = 2;
     */
    categoryId: string;
    /**
     * @generated from protobuf oneof: name
     */
    name: {
        oneofKind: "nameOverride";
        /**
         * @generated from protobuf field: Mgmt.StringOverride nameOverride = 3;
         */
        nameOverride: StringOverride;
    } | {
        oneofKind: undefined;
    };
    /**
     * @generated from protobuf oneof: imagePath
     */
    imagePath: {
        oneofKind: "imagePathOverride";
        /**
         * @generated from protobuf field: Mgmt.StringOverride imagePathOverride = 4;
         */
        imagePathOverride: StringOverride;
    } | {
        oneofKind: undefined;
    };
    /**
     * @generated from protobuf oneof: menuItemIds
     */
    menuItemIds: {
        oneofKind: "menuItemIdsOverride";
        /**
         * @generated from protobuf field: Mgmt.StringListOverride menuItemIdsOverride = 5;
         */
        menuItemIdsOverride: StringListOverride;
    } | {
        oneofKind: undefined;
    };
    /**
     * @generated from protobuf oneof: isActive
     */
    isActive: {
        oneofKind: "isActiveOverride";
        /**
         * @generated from protobuf field: Mgmt.BoolOverride isActiveOverride = 6;
         */
        isActiveOverride: BoolOverride;
    } | {
        oneofKind: undefined;
    };
}
/**
 * @generated from protobuf message Mgmt.MasterMenuItemOverride
 */
export interface MasterMenuItemOverride {
    /**
     * @generated from protobuf field: string companyId = 1;
     */
    companyId: string;
    /**
     * @generated from protobuf field: string menuItemId = 2;
     */
    menuItemId: string;
    /**
     * @generated from protobuf oneof: name
     */
    name: {
        oneofKind: "nameOverride";
        /**
         * @generated from protobuf field: Mgmt.StringOverride nameOverride = 3;
         */
        nameOverride: StringOverride;
    } | {
        oneofKind: undefined;
    };
    /**
     * @generated from protobuf oneof: displayFlow
     */
    displayFlow: {
        oneofKind: "displayFlowOverride";
        /**
         * @generated from protobuf field: Mgmt.CompanyDisplayFlowOverride displayFlowOverride = 15;
         */
        displayFlowOverride: CompanyDisplayFlowOverride;
    } | {
        oneofKind: undefined;
    };
    /**
     * @generated from protobuf oneof: imagePath
     */
    imagePath: {
        oneofKind: "imagePathOverride";
        /**
         * @generated from protobuf field: Mgmt.StringOverride imagePathOverride = 4;
         */
        imagePathOverride: StringOverride;
    } | {
        oneofKind: undefined;
    };
    /**
     * @generated from protobuf oneof: description
     */
    description: {
        oneofKind: "descriptionOverride";
        /**
         * @generated from protobuf field: Mgmt.StringOverride descriptionOverride = 5;
         */
        descriptionOverride: StringOverride;
    } | {
        oneofKind: undefined;
    };
    /**
     * @generated from protobuf oneof: modifierGroupIds
     */
    modifierGroupIds: {
        oneofKind: "modifierGroupIdsOverride";
        /**
         * @generated from protobuf field: Mgmt.StringListOverride modifierGroupIdsOverride = 6;
         */
        modifierGroupIdsOverride: StringListOverride;
    } | {
        oneofKind: undefined;
    };
    /**
     * @generated from protobuf oneof: isActive
     */
    isActive: {
        oneofKind: "isActiveOverride";
        /**
         * @generated from protobuf field: Mgmt.BoolOverride isActiveOverride = 7;
         */
        isActiveOverride: BoolOverride;
    } | {
        oneofKind: undefined;
    };
    /**
     * @generated from protobuf oneof: calorieText
     */
    calorieText: {
        oneofKind: "calorieTextOverride";
        /**
         * @generated from protobuf field: Mgmt.StringOverride calorieTextOverride = 8;
         */
        calorieTextOverride: StringOverride;
    } | {
        oneofKind: undefined;
    };
}
/**
 * @generated from protobuf message Mgmt.MasterModifierGroupOverride
 */
export interface MasterModifierGroupOverride {
    /**
     * @generated from protobuf field: string companyId = 1;
     */
    companyId: string;
    /**
     * @generated from protobuf field: string modifierGroupId = 2;
     */
    modifierGroupId: string;
    /**
     * @generated from protobuf oneof: name
     */
    name: {
        oneofKind: "nameOverride";
        /**
         * @generated from protobuf field: Mgmt.StringOverride nameOverride = 3;
         */
        nameOverride: StringOverride;
    } | {
        oneofKind: undefined;
    };
    /**
     * @generated from protobuf oneof: selectMin
     */
    selectMin: {
        oneofKind: "selectMinOverride";
        /**
         * @generated from protobuf field: Mgmt.IntOverride selectMinOverride = 4;
         */
        selectMinOverride: IntOverride;
    } | {
        oneofKind: undefined;
    };
    /**
     * @generated from protobuf oneof: selectMax
     */
    selectMax: {
        oneofKind: "selectMaxOverride";
        /**
         * @generated from protobuf field: Mgmt.IntOverride selectMaxOverride = 5;
         */
        selectMaxOverride: IntOverride;
    } | {
        oneofKind: undefined;
    };
    /**
     * @generated from protobuf oneof: modifierIds
     */
    modifierIds: {
        oneofKind: "modifierIdsOverride";
        /**
         * @generated from protobuf field: Mgmt.StringListOverride modifierIdsOverride = 6;
         */
        modifierIdsOverride: StringListOverride;
    } | {
        oneofKind: undefined;
    };
    /**
     * @generated from protobuf oneof: isActive
     */
    isActive: {
        oneofKind: "isActiveOverride";
        /**
         * @generated from protobuf field: Mgmt.BoolOverride isActiveOverride = 7;
         */
        isActiveOverride: BoolOverride;
    } | {
        oneofKind: undefined;
    };
    /**
     * @generated from protobuf oneof: displayFlow
     */
    displayFlow: {
        oneofKind: "displayFlowOverride";
        /**
         * @generated from protobuf field: Mgmt.StringOverride displayFlowOverride = 15;
         */
        displayFlowOverride: StringOverride;
    } | {
        oneofKind: undefined;
    };
}
/**
 * @generated from protobuf message Mgmt.MasterModifierOverride
 */
export interface MasterModifierOverride {
    /**
     * @generated from protobuf field: string companyId = 1;
     */
    companyId: string;
    /**
     * @generated from protobuf field: string modifierId = 2;
     */
    modifierId: string;
    /**
     * @generated from protobuf oneof: isDefault
     */
    isDefault: {
        oneofKind: "isDefaultOverride";
        /**
         * @generated from protobuf field: Mgmt.BoolOverride isDefaultOverride = 3;
         */
        isDefaultOverride: BoolOverride;
    } | {
        oneofKind: undefined;
    };
    /**
     * @generated from protobuf oneof: maxQuantity
     */
    maxQuantity: {
        oneofKind: "maxQuantityOverride";
        /**
         * @generated from protobuf field: Mgmt.IntOverride maxQuantityOverride = 4;
         */
        maxQuantityOverride: IntOverride;
    } | {
        oneofKind: undefined;
    };
}
/**
 * @generated from protobuf message Mgmt.CompanyDisplayFlowOverride
 */
export interface CompanyDisplayFlowOverride {
    /**
     * @generated from protobuf field: Mgmt.MenuItemDisplayFlow value = 1;
     */
    value: MenuItemDisplayFlow;
    /**
     * @generated from protobuf field: Mgmt.OverrideAction action = 2;
     */
    action: OverrideAction;
}
// @generated message type with reflection information, may provide speed optimized methods
class CompanyMenusRequest$Type extends MessageType<CompanyMenusRequest> {
    constructor() {
        super("Mgmt.CompanyMenusRequest", [
            { no: 1, name: "companyId", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<CompanyMenusRequest>): CompanyMenusRequest {
        const message = { companyId: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<CompanyMenusRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: CompanyMenusRequest): CompanyMenusRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string companyId */ 1:
                    message.companyId = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: CompanyMenusRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string companyId = 1; */
        if (message.companyId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.companyId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message Mgmt.CompanyMenusRequest
 */
export const CompanyMenusRequest = new CompanyMenusRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CompanyMenuResponse$Type extends MessageType<CompanyMenuResponse> {
    constructor() {
        super("Mgmt.CompanyMenuResponse", []);
    }
    create(value?: PartialMessage<CompanyMenuResponse>): CompanyMenuResponse {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<CompanyMenuResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: CompanyMenuResponse): CompanyMenuResponse {
        return target ?? this.create();
    }
    internalBinaryWrite(message: CompanyMenuResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message Mgmt.CompanyMenuResponse
 */
export const CompanyMenuResponse = new CompanyMenuResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CompanyMasterMenu$Type extends MessageType<CompanyMasterMenu> {
    constructor() {
        super("Mgmt.CompanyMasterMenu", [
            { no: 1, name: "companyId", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "menuSectionOverrides", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => MasterMenuSectionOverride },
            { no: 3, name: "menuItemOverrides", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => MasterMenuItemOverride },
            { no: 4, name: "modifierGroupOverrides", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => MasterModifierGroupOverride },
            { no: 5, name: "modifierOverrides", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => MasterModifierOverride }
        ]);
    }
    create(value?: PartialMessage<CompanyMasterMenu>): CompanyMasterMenu {
        const message = { companyId: "", menuSectionOverrides: [], menuItemOverrides: [], modifierGroupOverrides: [], modifierOverrides: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<CompanyMasterMenu>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: CompanyMasterMenu): CompanyMasterMenu {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string companyId */ 1:
                    message.companyId = reader.string();
                    break;
                case /* repeated Mgmt.MasterMenuSectionOverride menuSectionOverrides */ 2:
                    message.menuSectionOverrides.push(MasterMenuSectionOverride.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated Mgmt.MasterMenuItemOverride menuItemOverrides */ 3:
                    message.menuItemOverrides.push(MasterMenuItemOverride.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated Mgmt.MasterModifierGroupOverride modifierGroupOverrides */ 4:
                    message.modifierGroupOverrides.push(MasterModifierGroupOverride.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated Mgmt.MasterModifierOverride modifierOverrides */ 5:
                    message.modifierOverrides.push(MasterModifierOverride.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: CompanyMasterMenu, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string companyId = 1; */
        if (message.companyId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.companyId);
        /* repeated Mgmt.MasterMenuSectionOverride menuSectionOverrides = 2; */
        for (let i = 0; i < message.menuSectionOverrides.length; i++)
            MasterMenuSectionOverride.internalBinaryWrite(message.menuSectionOverrides[i], writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* repeated Mgmt.MasterMenuItemOverride menuItemOverrides = 3; */
        for (let i = 0; i < message.menuItemOverrides.length; i++)
            MasterMenuItemOverride.internalBinaryWrite(message.menuItemOverrides[i], writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* repeated Mgmt.MasterModifierGroupOverride modifierGroupOverrides = 4; */
        for (let i = 0; i < message.modifierGroupOverrides.length; i++)
            MasterModifierGroupOverride.internalBinaryWrite(message.modifierGroupOverrides[i], writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* repeated Mgmt.MasterModifierOverride modifierOverrides = 5; */
        for (let i = 0; i < message.modifierOverrides.length; i++)
            MasterModifierOverride.internalBinaryWrite(message.modifierOverrides[i], writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message Mgmt.CompanyMasterMenu
 */
export const CompanyMasterMenu = new CompanyMasterMenu$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MasterMenuSectionOverride$Type extends MessageType<MasterMenuSectionOverride> {
    constructor() {
        super("Mgmt.MasterMenuSectionOverride", [
            { no: 1, name: "companyId", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "categoryId", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "nameOverride", kind: "message", oneof: "name", T: () => StringOverride },
            { no: 4, name: "imagePathOverride", kind: "message", oneof: "imagePath", T: () => StringOverride },
            { no: 5, name: "menuItemIdsOverride", kind: "message", oneof: "menuItemIds", T: () => StringListOverride },
            { no: 6, name: "isActiveOverride", kind: "message", oneof: "isActive", T: () => BoolOverride }
        ]);
    }
    create(value?: PartialMessage<MasterMenuSectionOverride>): MasterMenuSectionOverride {
        const message = { companyId: "", categoryId: "", name: { oneofKind: undefined }, imagePath: { oneofKind: undefined }, menuItemIds: { oneofKind: undefined }, isActive: { oneofKind: undefined } };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<MasterMenuSectionOverride>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MasterMenuSectionOverride): MasterMenuSectionOverride {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string companyId */ 1:
                    message.companyId = reader.string();
                    break;
                case /* string categoryId */ 2:
                    message.categoryId = reader.string();
                    break;
                case /* Mgmt.StringOverride nameOverride */ 3:
                    message.name = {
                        oneofKind: "nameOverride",
                        nameOverride: StringOverride.internalBinaryRead(reader, reader.uint32(), options, (message.name as any).nameOverride)
                    };
                    break;
                case /* Mgmt.StringOverride imagePathOverride */ 4:
                    message.imagePath = {
                        oneofKind: "imagePathOverride",
                        imagePathOverride: StringOverride.internalBinaryRead(reader, reader.uint32(), options, (message.imagePath as any).imagePathOverride)
                    };
                    break;
                case /* Mgmt.StringListOverride menuItemIdsOverride */ 5:
                    message.menuItemIds = {
                        oneofKind: "menuItemIdsOverride",
                        menuItemIdsOverride: StringListOverride.internalBinaryRead(reader, reader.uint32(), options, (message.menuItemIds as any).menuItemIdsOverride)
                    };
                    break;
                case /* Mgmt.BoolOverride isActiveOverride */ 6:
                    message.isActive = {
                        oneofKind: "isActiveOverride",
                        isActiveOverride: BoolOverride.internalBinaryRead(reader, reader.uint32(), options, (message.isActive as any).isActiveOverride)
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: MasterMenuSectionOverride, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string companyId = 1; */
        if (message.companyId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.companyId);
        /* string categoryId = 2; */
        if (message.categoryId !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.categoryId);
        /* Mgmt.StringOverride nameOverride = 3; */
        if (message.name.oneofKind === "nameOverride")
            StringOverride.internalBinaryWrite(message.name.nameOverride, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* Mgmt.StringOverride imagePathOverride = 4; */
        if (message.imagePath.oneofKind === "imagePathOverride")
            StringOverride.internalBinaryWrite(message.imagePath.imagePathOverride, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* Mgmt.StringListOverride menuItemIdsOverride = 5; */
        if (message.menuItemIds.oneofKind === "menuItemIdsOverride")
            StringListOverride.internalBinaryWrite(message.menuItemIds.menuItemIdsOverride, writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        /* Mgmt.BoolOverride isActiveOverride = 6; */
        if (message.isActive.oneofKind === "isActiveOverride")
            BoolOverride.internalBinaryWrite(message.isActive.isActiveOverride, writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message Mgmt.MasterMenuSectionOverride
 */
export const MasterMenuSectionOverride = new MasterMenuSectionOverride$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MasterMenuItemOverride$Type extends MessageType<MasterMenuItemOverride> {
    constructor() {
        super("Mgmt.MasterMenuItemOverride", [
            { no: 1, name: "companyId", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "menuItemId", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "nameOverride", kind: "message", oneof: "name", T: () => StringOverride },
            { no: 15, name: "displayFlowOverride", kind: "message", oneof: "displayFlow", T: () => CompanyDisplayFlowOverride },
            { no: 4, name: "imagePathOverride", kind: "message", oneof: "imagePath", T: () => StringOverride },
            { no: 5, name: "descriptionOverride", kind: "message", oneof: "description", T: () => StringOverride },
            { no: 6, name: "modifierGroupIdsOverride", kind: "message", oneof: "modifierGroupIds", T: () => StringListOverride },
            { no: 7, name: "isActiveOverride", kind: "message", oneof: "isActive", T: () => BoolOverride },
            { no: 8, name: "calorieTextOverride", kind: "message", oneof: "calorieText", T: () => StringOverride }
        ]);
    }
    create(value?: PartialMessage<MasterMenuItemOverride>): MasterMenuItemOverride {
        const message = { companyId: "", menuItemId: "", name: { oneofKind: undefined }, displayFlow: { oneofKind: undefined }, imagePath: { oneofKind: undefined }, description: { oneofKind: undefined }, modifierGroupIds: { oneofKind: undefined }, isActive: { oneofKind: undefined }, calorieText: { oneofKind: undefined } };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<MasterMenuItemOverride>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MasterMenuItemOverride): MasterMenuItemOverride {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string companyId */ 1:
                    message.companyId = reader.string();
                    break;
                case /* string menuItemId */ 2:
                    message.menuItemId = reader.string();
                    break;
                case /* Mgmt.StringOverride nameOverride */ 3:
                    message.name = {
                        oneofKind: "nameOverride",
                        nameOverride: StringOverride.internalBinaryRead(reader, reader.uint32(), options, (message.name as any).nameOverride)
                    };
                    break;
                case /* Mgmt.CompanyDisplayFlowOverride displayFlowOverride */ 15:
                    message.displayFlow = {
                        oneofKind: "displayFlowOverride",
                        displayFlowOverride: CompanyDisplayFlowOverride.internalBinaryRead(reader, reader.uint32(), options, (message.displayFlow as any).displayFlowOverride)
                    };
                    break;
                case /* Mgmt.StringOverride imagePathOverride */ 4:
                    message.imagePath = {
                        oneofKind: "imagePathOverride",
                        imagePathOverride: StringOverride.internalBinaryRead(reader, reader.uint32(), options, (message.imagePath as any).imagePathOverride)
                    };
                    break;
                case /* Mgmt.StringOverride descriptionOverride */ 5:
                    message.description = {
                        oneofKind: "descriptionOverride",
                        descriptionOverride: StringOverride.internalBinaryRead(reader, reader.uint32(), options, (message.description as any).descriptionOverride)
                    };
                    break;
                case /* Mgmt.StringListOverride modifierGroupIdsOverride */ 6:
                    message.modifierGroupIds = {
                        oneofKind: "modifierGroupIdsOverride",
                        modifierGroupIdsOverride: StringListOverride.internalBinaryRead(reader, reader.uint32(), options, (message.modifierGroupIds as any).modifierGroupIdsOverride)
                    };
                    break;
                case /* Mgmt.BoolOverride isActiveOverride */ 7:
                    message.isActive = {
                        oneofKind: "isActiveOverride",
                        isActiveOverride: BoolOverride.internalBinaryRead(reader, reader.uint32(), options, (message.isActive as any).isActiveOverride)
                    };
                    break;
                case /* Mgmt.StringOverride calorieTextOverride */ 8:
                    message.calorieText = {
                        oneofKind: "calorieTextOverride",
                        calorieTextOverride: StringOverride.internalBinaryRead(reader, reader.uint32(), options, (message.calorieText as any).calorieTextOverride)
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: MasterMenuItemOverride, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string companyId = 1; */
        if (message.companyId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.companyId);
        /* string menuItemId = 2; */
        if (message.menuItemId !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.menuItemId);
        /* Mgmt.StringOverride nameOverride = 3; */
        if (message.name.oneofKind === "nameOverride")
            StringOverride.internalBinaryWrite(message.name.nameOverride, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* Mgmt.CompanyDisplayFlowOverride displayFlowOverride = 15; */
        if (message.displayFlow.oneofKind === "displayFlowOverride")
            CompanyDisplayFlowOverride.internalBinaryWrite(message.displayFlow.displayFlowOverride, writer.tag(15, WireType.LengthDelimited).fork(), options).join();
        /* Mgmt.StringOverride imagePathOverride = 4; */
        if (message.imagePath.oneofKind === "imagePathOverride")
            StringOverride.internalBinaryWrite(message.imagePath.imagePathOverride, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* Mgmt.StringOverride descriptionOverride = 5; */
        if (message.description.oneofKind === "descriptionOverride")
            StringOverride.internalBinaryWrite(message.description.descriptionOverride, writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        /* Mgmt.StringListOverride modifierGroupIdsOverride = 6; */
        if (message.modifierGroupIds.oneofKind === "modifierGroupIdsOverride")
            StringListOverride.internalBinaryWrite(message.modifierGroupIds.modifierGroupIdsOverride, writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        /* Mgmt.BoolOverride isActiveOverride = 7; */
        if (message.isActive.oneofKind === "isActiveOverride")
            BoolOverride.internalBinaryWrite(message.isActive.isActiveOverride, writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        /* Mgmt.StringOverride calorieTextOverride = 8; */
        if (message.calorieText.oneofKind === "calorieTextOverride")
            StringOverride.internalBinaryWrite(message.calorieText.calorieTextOverride, writer.tag(8, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message Mgmt.MasterMenuItemOverride
 */
export const MasterMenuItemOverride = new MasterMenuItemOverride$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MasterModifierGroupOverride$Type extends MessageType<MasterModifierGroupOverride> {
    constructor() {
        super("Mgmt.MasterModifierGroupOverride", [
            { no: 1, name: "companyId", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "modifierGroupId", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "nameOverride", kind: "message", oneof: "name", T: () => StringOverride },
            { no: 4, name: "selectMinOverride", kind: "message", oneof: "selectMin", T: () => IntOverride },
            { no: 5, name: "selectMaxOverride", kind: "message", oneof: "selectMax", T: () => IntOverride },
            { no: 6, name: "modifierIdsOverride", kind: "message", oneof: "modifierIds", T: () => StringListOverride },
            { no: 7, name: "isActiveOverride", kind: "message", oneof: "isActive", T: () => BoolOverride },
            { no: 15, name: "displayFlowOverride", kind: "message", oneof: "displayFlow", T: () => StringOverride }
        ]);
    }
    create(value?: PartialMessage<MasterModifierGroupOverride>): MasterModifierGroupOverride {
        const message = { companyId: "", modifierGroupId: "", name: { oneofKind: undefined }, selectMin: { oneofKind: undefined }, selectMax: { oneofKind: undefined }, modifierIds: { oneofKind: undefined }, isActive: { oneofKind: undefined }, displayFlow: { oneofKind: undefined } };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<MasterModifierGroupOverride>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MasterModifierGroupOverride): MasterModifierGroupOverride {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string companyId */ 1:
                    message.companyId = reader.string();
                    break;
                case /* string modifierGroupId */ 2:
                    message.modifierGroupId = reader.string();
                    break;
                case /* Mgmt.StringOverride nameOverride */ 3:
                    message.name = {
                        oneofKind: "nameOverride",
                        nameOverride: StringOverride.internalBinaryRead(reader, reader.uint32(), options, (message.name as any).nameOverride)
                    };
                    break;
                case /* Mgmt.IntOverride selectMinOverride */ 4:
                    message.selectMin = {
                        oneofKind: "selectMinOverride",
                        selectMinOverride: IntOverride.internalBinaryRead(reader, reader.uint32(), options, (message.selectMin as any).selectMinOverride)
                    };
                    break;
                case /* Mgmt.IntOverride selectMaxOverride */ 5:
                    message.selectMax = {
                        oneofKind: "selectMaxOverride",
                        selectMaxOverride: IntOverride.internalBinaryRead(reader, reader.uint32(), options, (message.selectMax as any).selectMaxOverride)
                    };
                    break;
                case /* Mgmt.StringListOverride modifierIdsOverride */ 6:
                    message.modifierIds = {
                        oneofKind: "modifierIdsOverride",
                        modifierIdsOverride: StringListOverride.internalBinaryRead(reader, reader.uint32(), options, (message.modifierIds as any).modifierIdsOverride)
                    };
                    break;
                case /* Mgmt.BoolOverride isActiveOverride */ 7:
                    message.isActive = {
                        oneofKind: "isActiveOverride",
                        isActiveOverride: BoolOverride.internalBinaryRead(reader, reader.uint32(), options, (message.isActive as any).isActiveOverride)
                    };
                    break;
                case /* Mgmt.StringOverride displayFlowOverride */ 15:
                    message.displayFlow = {
                        oneofKind: "displayFlowOverride",
                        displayFlowOverride: StringOverride.internalBinaryRead(reader, reader.uint32(), options, (message.displayFlow as any).displayFlowOverride)
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: MasterModifierGroupOverride, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string companyId = 1; */
        if (message.companyId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.companyId);
        /* string modifierGroupId = 2; */
        if (message.modifierGroupId !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.modifierGroupId);
        /* Mgmt.StringOverride nameOverride = 3; */
        if (message.name.oneofKind === "nameOverride")
            StringOverride.internalBinaryWrite(message.name.nameOverride, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* Mgmt.IntOverride selectMinOverride = 4; */
        if (message.selectMin.oneofKind === "selectMinOverride")
            IntOverride.internalBinaryWrite(message.selectMin.selectMinOverride, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* Mgmt.IntOverride selectMaxOverride = 5; */
        if (message.selectMax.oneofKind === "selectMaxOverride")
            IntOverride.internalBinaryWrite(message.selectMax.selectMaxOverride, writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        /* Mgmt.StringListOverride modifierIdsOverride = 6; */
        if (message.modifierIds.oneofKind === "modifierIdsOverride")
            StringListOverride.internalBinaryWrite(message.modifierIds.modifierIdsOverride, writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        /* Mgmt.BoolOverride isActiveOverride = 7; */
        if (message.isActive.oneofKind === "isActiveOverride")
            BoolOverride.internalBinaryWrite(message.isActive.isActiveOverride, writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        /* Mgmt.StringOverride displayFlowOverride = 15; */
        if (message.displayFlow.oneofKind === "displayFlowOverride")
            StringOverride.internalBinaryWrite(message.displayFlow.displayFlowOverride, writer.tag(15, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message Mgmt.MasterModifierGroupOverride
 */
export const MasterModifierGroupOverride = new MasterModifierGroupOverride$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MasterModifierOverride$Type extends MessageType<MasterModifierOverride> {
    constructor() {
        super("Mgmt.MasterModifierOverride", [
            { no: 1, name: "companyId", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "modifierId", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "isDefaultOverride", kind: "message", oneof: "isDefault", T: () => BoolOverride },
            { no: 4, name: "maxQuantityOverride", kind: "message", oneof: "maxQuantity", T: () => IntOverride }
        ]);
    }
    create(value?: PartialMessage<MasterModifierOverride>): MasterModifierOverride {
        const message = { companyId: "", modifierId: "", isDefault: { oneofKind: undefined }, maxQuantity: { oneofKind: undefined } };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<MasterModifierOverride>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MasterModifierOverride): MasterModifierOverride {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string companyId */ 1:
                    message.companyId = reader.string();
                    break;
                case /* string modifierId */ 2:
                    message.modifierId = reader.string();
                    break;
                case /* Mgmt.BoolOverride isDefaultOverride */ 3:
                    message.isDefault = {
                        oneofKind: "isDefaultOverride",
                        isDefaultOverride: BoolOverride.internalBinaryRead(reader, reader.uint32(), options, (message.isDefault as any).isDefaultOverride)
                    };
                    break;
                case /* Mgmt.IntOverride maxQuantityOverride */ 4:
                    message.maxQuantity = {
                        oneofKind: "maxQuantityOverride",
                        maxQuantityOverride: IntOverride.internalBinaryRead(reader, reader.uint32(), options, (message.maxQuantity as any).maxQuantityOverride)
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: MasterModifierOverride, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string companyId = 1; */
        if (message.companyId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.companyId);
        /* string modifierId = 2; */
        if (message.modifierId !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.modifierId);
        /* Mgmt.BoolOverride isDefaultOverride = 3; */
        if (message.isDefault.oneofKind === "isDefaultOverride")
            BoolOverride.internalBinaryWrite(message.isDefault.isDefaultOverride, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* Mgmt.IntOverride maxQuantityOverride = 4; */
        if (message.maxQuantity.oneofKind === "maxQuantityOverride")
            IntOverride.internalBinaryWrite(message.maxQuantity.maxQuantityOverride, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message Mgmt.MasterModifierOverride
 */
export const MasterModifierOverride = new MasterModifierOverride$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CompanyDisplayFlowOverride$Type extends MessageType<CompanyDisplayFlowOverride> {
    constructor() {
        super("Mgmt.CompanyDisplayFlowOverride", [
            { no: 1, name: "value", kind: "enum", T: () => ["Mgmt.MenuItemDisplayFlow", MenuItemDisplayFlow] },
            { no: 2, name: "action", kind: "enum", T: () => ["Mgmt.OverrideAction", OverrideAction] }
        ]);
    }
    create(value?: PartialMessage<CompanyDisplayFlowOverride>): CompanyDisplayFlowOverride {
        const message = { value: 0, action: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<CompanyDisplayFlowOverride>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: CompanyDisplayFlowOverride): CompanyDisplayFlowOverride {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* Mgmt.MenuItemDisplayFlow value */ 1:
                    message.value = reader.int32();
                    break;
                case /* Mgmt.OverrideAction action */ 2:
                    message.action = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: CompanyDisplayFlowOverride, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* Mgmt.MenuItemDisplayFlow value = 1; */
        if (message.value !== 0)
            writer.tag(1, WireType.Varint).int32(message.value);
        /* Mgmt.OverrideAction action = 2; */
        if (message.action !== 0)
            writer.tag(2, WireType.Varint).int32(message.action);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message Mgmt.CompanyDisplayFlowOverride
 */
export const CompanyDisplayFlowOverride = new CompanyDisplayFlowOverride$Type();
/**
 * @generated ServiceType for protobuf service Mgmt.CompanyMenuService
 */
export const CompanyMenuService = new ServiceType("Mgmt.CompanyMenuService", [
    { name: "GetCompanyMenus", options: {}, I: CompanyMenusRequest, O: CompanyMenuResponse }
]);
